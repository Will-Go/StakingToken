{
	"id": "712cf8cb2be0393ccc167991580b4ad8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"main.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract StackContract is ERC20 {\n    // The reward rate (tokens per second)\n    uint256 public rewardRate = 1;\n    address public owner;\n    // User-specific staking information\n    struct Staker {\n        uint256 stakedAmount;\n        uint256 rewardDebt;\n        uint256 stakeTimestamp;\n    }\n\n    mapping(address => Staker) public stakers;\n\n    event Staked(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n    event RewardClaimed(address indexed user, uint256 amount);\n\n    constructor(uint256 _initialValue) ERC20(\"KipuCoin\", \"KPC\") {\n        // Mint initial tokens to the owner (for example, 1 million tokens)\n        owner = msg.sender;\n        _mint(owner, _initialValue * 10**decimals());\n    }\n\n    //Modificador de onlyOwner\n    modifier onlyOwner() {\n        require(owner == msg.sender, \"Only owner!!\");\n        _;\n    }\n\n    // Function to stake tokens\n    function stake(uint256 amount) external {\n        require(amount > 0, \"Cannot stake zero tokens\");\n\n        Staker storage staker = stakers[msg.sender];\n\n        // Calculate and claim pending rewards before staking more\n        uint256 pendingReward = calculateReward(msg.sender);\n        if (pendingReward > 0) {\n            _mint(msg.sender, pendingReward); // Mint the pending rewards as tokens\n            emit RewardClaimed(msg.sender, pendingReward);\n        }\n\n        // Transfer staking tokens to the contract\n        _transfer(msg.sender, address(this), amount);\n\n        // Update staking info\n        staker.stakedAmount += amount;\n        staker.stakeTimestamp = block.timestamp;\n        staker.rewardDebt = staker.stakedAmount * rewardRate;\n\n        emit Staked(msg.sender, amount);\n    }\n\n    // Function to unstake tokens and claim rewards\n    function unstake(uint256 amount) external {\n        Staker storage staker = stakers[msg.sender];\n        require(staker.stakedAmount >= amount, \"Not enough staked tokens\");\n\n        // Calculate and claim pending rewards before unstaking\n        uint256 pendingReward = calculateReward(msg.sender);\n        if (pendingReward > 0) {\n            _mint(msg.sender, pendingReward); // Mint the pending rewards as tokens\n            emit RewardClaimed(msg.sender, pendingReward);\n        }\n\n        // Update staking info\n        staker.stakedAmount -= amount;\n        staker.rewardDebt = staker.stakedAmount * rewardRate;\n        staker.stakeTimestamp = block.timestamp;\n\n        // Transfer the unstaked tokens back to the user\n        _transfer(address(this), msg.sender, amount);\n\n        emit Unstaked(msg.sender, amount);\n    }\n\n    function calculateReward(address stakerAddress)\n        public\n        view\n        returns (uint256)\n    {\n        Staker storage staker = stakers[stakerAddress];\n        uint256 stakingTime = block.timestamp - staker.stakeTimestamp;\n        uint256 reward = (staker.stakedAmount * rewardRate * stakingTime) /\n            1e18;\n        return reward;\n    }\n\n    // Owner function to adjust the reward rate\n    function setRewardRate(uint256 newRate) external onlyOwner {\n        rewardRate = newRate;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main.sol": {
				"StackContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialValue",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakerAddress",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakeTimestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"main.sol\":114:3237  contract StackContract is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"main.sol\":223:224  1 */\n  0x01\n    /* \"main.sol\":195:224  uint256 public rewardRate = 1 */\n  0x05\n  sstore\n    /* \"main.sol\":640:865  constructor(uint256 _initialValue) ERC20(\"KipuCoin\", \"KPC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x4b697075436f696e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4b50430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"main.sol\":794:804  msg.sender */\n  caller\n    /* \"main.sol\":786:791  owner */\n  0x06\n  0x00\n    /* \"main.sol\":786:804  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"main.sol\":814:858  _mint(owner, _initialValue * 10**decimals()) */\n  tag_11\n    /* \"main.sol\":820:825  owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"main.sol\":847:857  decimals() */\n  tag_12\n    /* \"main.sol\":847:855  decimals */\n  shl(0x20, tag_13)\n    /* \"main.sol\":847:857  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"main.sol\":843:845  10 */\n  0x0a\n    /* \"main.sol\":843:857  10**decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"main.sol\":827:840  _initialValue */\n  dup4\n    /* \"main.sol\":827:857  _initialValue * 10**decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"main.sol\":814:819  _mint */\n  shl(0x20, tag_18)\n    /* \"main.sol\":814:858  _mint(owner, _initialValue * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"main.sol\":640:865  constructor(uint256 _initialValue) ERC20(\"KipuCoin\", \"KPC\") {... */\n  pop\n    /* \"main.sol\":114:3237  contract StackContract is ERC20 {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_43:\n    /* \"#utility.yul\":490:514   */\n  tag_79\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_42\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_80:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_44:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_82\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_43\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_85\n  tag_40\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":781:900   */\ntag_84:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_86\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_44\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_45:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_46:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_47:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_48:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_91:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_93\n  tag_47\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1758:1842   */\ntag_92:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_49:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_50:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_51:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_52:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_98\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_51\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2473:2512   */\n  tag_99\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_51\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_53:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_54:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_102\n    /* \"#utility.yul\":2779:2813   */\n  tag_103\n    /* \"#utility.yul\":2788:2812   */\n  tag_104\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_42\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2779:2813   */\n  tag_53\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2761:2814   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_55:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_56:\n    /* \"#utility.yul\":3017:3056   */\n  tag_107\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_54\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3078:3169   */\n  tag_108\n    /* \"#utility.yul\":3127:3168   */\n  tag_109\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_55\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_52\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_57:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_58:\n    /* \"#utility.yul\":3338:3370   */\n  tag_112\n  tag_57\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3379:3444   */\n  tag_113\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_56\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_59:\n    /* \"#utility.yul\":3516:3636   */\ntag_115:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_118\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_58\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_60:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_121\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_49\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3867:3896   */\n  tag_122\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_50\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_123:\n    /* \"#utility.yul\":4094:4174   */\n  tag_124\n    /* \"#utility.yul\":4150:4172   */\n  tag_125\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_50\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_59\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_120:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_61:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_62:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_128\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_61\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_63:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_130\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_62\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_8:\n    /* \"#utility.yul\":4911:4948   */\n  tag_132\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_45\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_134\n  tag_46\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4999:5055   */\ntag_133:\n    /* \"#utility.yul\":5079:5117   */\n  tag_135\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_48\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5164:5231   */\n  tag_136\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_60\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_139:\n    /* \"#utility.yul\":6105:6172   */\n  tag_140\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_63\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_137)\n    /* \"#utility.yul\":5326:5944   */\ntag_138:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_141\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_49\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_142:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_146\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_62\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_145:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_137:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6375   */\ntag_64:\n    /* \"#utility.yul\":6243:6320   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6240:6241   */\n  0x00\n    /* \"#utility.yul\":6233:6321   */\n  mstore\n    /* \"#utility.yul\":6340:6344   */\n  0x11\n    /* \"#utility.yul\":6337:6338   */\n  0x04\n    /* \"#utility.yul\":6330:6345   */\n  mstore\n    /* \"#utility.yul\":6364:6368   */\n  0x24\n    /* \"#utility.yul\":6361:6362   */\n  0x00\n    /* \"#utility.yul\":6354:6369   */\n  revert\n    /* \"#utility.yul\":6381:6483   */\ntag_65:\n    /* \"#utility.yul\":6423:6431   */\n  0x00\n    /* \"#utility.yul\":6470:6475   */\n  dup2\n    /* \"#utility.yul\":6467:6468   */\n  0x01\n    /* \"#utility.yul\":6463:6476   */\n  shr\n    /* \"#utility.yul\":6442:6476   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6483   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6489:7337   */\ntag_66:\n    /* \"#utility.yul\":6550:6555   */\n  0x00\n    /* \"#utility.yul\":6557:6561   */\n  dup1\n    /* \"#utility.yul\":6581:6587   */\n  dup3\n    /* \"#utility.yul\":6572:6587   */\n  swap2\n  pop\n    /* \"#utility.yul\":6605:6610   */\n  dup4\n    /* \"#utility.yul\":6596:6610   */\n  swap1\n  pop\n    /* \"#utility.yul\":6619:7331   */\ntag_150:\n    /* \"#utility.yul\":6640:6641   */\n  0x01\n    /* \"#utility.yul\":6630:6638   */\n  dup6\n    /* \"#utility.yul\":6627:6642   */\n  gt\n    /* \"#utility.yul\":6619:7331   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6735:6739   */\n  dup1\n    /* \"#utility.yul\":6730:6733   */\n  dup7\n    /* \"#utility.yul\":6726:6740   */\n  div\n    /* \"#utility.yul\":6720:6724   */\n  dup2\n    /* \"#utility.yul\":6717:6741   */\n  gt\n    /* \"#utility.yul\":6714:6764   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6744:6762   */\n  tag_154\n  tag_64\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6714:6764   */\ntag_153:\n    /* \"#utility.yul\":6794:6795   */\n  0x01\n    /* \"#utility.yul\":6784:6792   */\n  dup6\n    /* \"#utility.yul\":6780:6796   */\n  and\n    /* \"#utility.yul\":6777:7228   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7209:7213   */\n  dup1\n    /* \"#utility.yul\":7202:7207   */\n  dup3\n    /* \"#utility.yul\":7198:7214   */\n  mul\n    /* \"#utility.yul\":7189:7214   */\n  swap2\n  pop\n    /* \"#utility.yul\":6777:7228   */\ntag_155:\n    /* \"#utility.yul\":7259:7263   */\n  dup1\n    /* \"#utility.yul\":7253:7257   */\n  dup2\n    /* \"#utility.yul\":7249:7264   */\n  mul\n    /* \"#utility.yul\":7241:7264   */\n  swap1\n  pop\n    /* \"#utility.yul\":7289:7321   */\n  tag_156\n    /* \"#utility.yul\":7312:7320   */\n  dup6\n    /* \"#utility.yul\":7289:7321   */\n  tag_65\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7277:7321   */\n  swap5\n  pop\n    /* \"#utility.yul\":6619:7331   */\n  jump(tag_150)\ntag_152:\n    /* \"#utility.yul\":6489:7337   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7343:8416   */\ntag_67:\n    /* \"#utility.yul\":7397:7402   */\n  0x00\n    /* \"#utility.yul\":7588:7596   */\n  dup3\n    /* \"#utility.yul\":7578:7618   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7609:7610   */\n  0x01\n    /* \"#utility.yul\":7600:7610   */\n  swap1\n  pop\n    /* \"#utility.yul\":7611:7616   */\n  jump(tag_157)\n    /* \"#utility.yul\":7578:7618   */\ntag_158:\n    /* \"#utility.yul\":7637:7641   */\n  dup2\n    /* \"#utility.yul\":7627:7663   */\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7654:7655   */\n  0x00\n    /* \"#utility.yul\":7645:7655   */\n  swap1\n  pop\n    /* \"#utility.yul\":7656:7661   */\n  jump(tag_157)\n    /* \"#utility.yul\":7627:7663   */\ntag_159:\n    /* \"#utility.yul\":7723:7727   */\n  dup2\n    /* \"#utility.yul\":7771:7772   */\n  0x01\n    /* \"#utility.yul\":7766:7793   */\n  dup2\n  eq\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7807:7808   */\n  0x02\n    /* \"#utility.yul\":7802:7993   */\n  dup2\n  eq\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7716:7993   */\n  jump(tag_160)\n    /* \"#utility.yul\":7766:7793   */\ntag_161:\n    /* \"#utility.yul\":7784:7785   */\n  0x01\n    /* \"#utility.yul\":7775:7785   */\n  swap2\n  pop\n    /* \"#utility.yul\":7786:7791   */\n  pop\n  jump(tag_157)\n    /* \"#utility.yul\":7802:7993   */\ntag_162:\n    /* \"#utility.yul\":7847:7850   */\n  0xff\n    /* \"#utility.yul\":7837:7845   */\n  dup5\n    /* \"#utility.yul\":7834:7851   */\n  gt\n    /* \"#utility.yul\":7831:7874   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7854:7872   */\n  tag_164\n  tag_64\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7831:7874   */\ntag_163:\n    /* \"#utility.yul\":7903:7911   */\n  dup4\n    /* \"#utility.yul\":7900:7901   */\n  0x02\n    /* \"#utility.yul\":7896:7912   */\n  exp\n    /* \"#utility.yul\":7887:7912   */\n  swap2\n  pop\n    /* \"#utility.yul\":7938:7941   */\n  dup5\n    /* \"#utility.yul\":7931:7936   */\n  dup3\n    /* \"#utility.yul\":7928:7942   */\n  gt\n    /* \"#utility.yul\":7925:7965   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":7945:7963   */\n  tag_166\n  tag_64\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7925:7965   */\ntag_165:\n    /* \"#utility.yul\":7978:7983   */\n  pop\n  jump(tag_157)\n    /* \"#utility.yul\":7716:7993   */\ntag_160:\n  pop\n    /* \"#utility.yul\":8102:8104   */\n  0x20\n    /* \"#utility.yul\":8092:8100   */\n  dup4\n    /* \"#utility.yul\":8089:8105   */\n  lt\n    /* \"#utility.yul\":8083:8086   */\n  0x0133\n    /* \"#utility.yul\":8077:8081   */\n  dup4\n    /* \"#utility.yul\":8074:8087   */\n  lt\n    /* \"#utility.yul\":8070:8106   */\n  and\n    /* \"#utility.yul\":8052:8054   */\n  0x4e\n    /* \"#utility.yul\":8042:8050   */\n  dup5\n    /* \"#utility.yul\":8039:8055   */\n  lt\n    /* \"#utility.yul\":8034:8036   */\n  0x0b\n    /* \"#utility.yul\":8028:8032   */\n  dup5\n    /* \"#utility.yul\":8025:8037   */\n  lt\n    /* \"#utility.yul\":8021:8056   */\n  and\n    /* \"#utility.yul\":8005:8116   */\n  or\n    /* \"#utility.yul\":8002:8248   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8158:8166   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup3\n    /* \"#utility.yul\":8148:8167   */\n  exp\n    /* \"#utility.yul\":8139:8167   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8196   */\n  dup4\n    /* \"#utility.yul\":8186:8191   */\n  dup2\n    /* \"#utility.yul\":8183:8197   */\n  gt\n    /* \"#utility.yul\":8180:8220   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8200:8218   */\n  tag_169\n  tag_64\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8180:8220   */\ntag_168:\n    /* \"#utility.yul\":8233:8238   */\n  jump(tag_157)\n    /* \"#utility.yul\":8002:8248   */\ntag_167:\n    /* \"#utility.yul\":8273:8315   */\n  tag_170\n    /* \"#utility.yul\":8311:8314   */\n  dup5\n    /* \"#utility.yul\":8301:8309   */\n  dup5\n    /* \"#utility.yul\":8295:8299   */\n  dup5\n    /* \"#utility.yul\":8292:8293   */\n  0x01\n    /* \"#utility.yul\":8273:8315   */\n  tag_66\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8258:8315   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8347:8351   */\n  dup2\n    /* \"#utility.yul\":8342:8345   */\n  dup5\n    /* \"#utility.yul\":8338:8352   */\n  div\n    /* \"#utility.yul\":8331:8336   */\n  dup2\n    /* \"#utility.yul\":8328:8353   */\n  gt\n    /* \"#utility.yul\":8325:8376   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8356:8374   */\n  tag_172\n  tag_64\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8325:8376   */\ntag_171:\n    /* \"#utility.yul\":8405:8409   */\n  dup2\n    /* \"#utility.yul\":8398:8403   */\n  dup2\n    /* \"#utility.yul\":8394:8410   */\n  mul\n    /* \"#utility.yul\":8385:8410   */\n  swap1\n  pop\n    /* \"#utility.yul\":7343:8416   */\ntag_157:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8422:8508   */\ntag_68:\n    /* \"#utility.yul\":8457:8464   */\n  0x00\n    /* \"#utility.yul\":8497:8501   */\n  0xff\n    /* \"#utility.yul\":8490:8495   */\n  dup3\n    /* \"#utility.yul\":8486:8502   */\n  and\n    /* \"#utility.yul\":8475:8502   */\n  swap1\n  pop\n    /* \"#utility.yul\":8422:8508   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8514:8795   */\ntag_15:\n    /* \"#utility.yul\":8572:8577   */\n  0x00\n    /* \"#utility.yul\":8596:8619   */\n  tag_175\n    /* \"#utility.yul\":8614:8618   */\n  dup3\n    /* \"#utility.yul\":8596:8619   */\n  tag_42\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8588:8619   */\n  swap2\n  pop\n    /* \"#utility.yul\":8640:8665   */\n  tag_176\n    /* \"#utility.yul\":8656:8664   */\n  dup4\n    /* \"#utility.yul\":8640:8665   */\n  tag_68\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8628:8665   */\n  swap3\n  pop\n    /* \"#utility.yul\":8684:8788   */\n  tag_177\n    /* \"#utility.yul\":8721:8787   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8711:8719   */\n  dup5\n    /* \"#utility.yul\":8705:8709   */\n  dup5\n    /* \"#utility.yul\":8684:8788   */\n  tag_67\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8675:8788   */\n  swap1\n  pop\n    /* \"#utility.yul\":8514:8795   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8801:9211   */\ntag_17:\n    /* \"#utility.yul\":8841:8848   */\n  0x00\n    /* \"#utility.yul\":8864:8884   */\n  tag_179\n    /* \"#utility.yul\":8882:8883   */\n  dup3\n    /* \"#utility.yul\":8864:8884   */\n  tag_42\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8859:8884   */\n  swap2\n  pop\n    /* \"#utility.yul\":8898:8918   */\n  tag_180\n    /* \"#utility.yul\":8916:8917   */\n  dup4\n    /* \"#utility.yul\":8898:8918   */\n  tag_42\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8893:8918   */\n  swap3\n  pop\n    /* \"#utility.yul\":8953:8954   */\n  dup3\n    /* \"#utility.yul\":8950:8951   */\n  dup3\n    /* \"#utility.yul\":8946:8955   */\n  mul\n    /* \"#utility.yul\":8975:9005   */\n  tag_181\n    /* \"#utility.yul\":8993:9004   */\n  dup2\n    /* \"#utility.yul\":8975:9005   */\n  tag_42\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8964:9005   */\n  swap2\n  pop\n    /* \"#utility.yul\":9154:9155   */\n  dup3\n    /* \"#utility.yul\":9145:9152   */\n  dup3\n    /* \"#utility.yul\":9141:9156   */\n  div\n    /* \"#utility.yul\":9138:9139   */\n  dup5\n    /* \"#utility.yul\":9135:9157   */\n  eq\n    /* \"#utility.yul\":9115:9116   */\n  dup4\n    /* \"#utility.yul\":9108:9117   */\n  iszero\n    /* \"#utility.yul\":9088:9171   */\n  or\n    /* \"#utility.yul\":9065:9204   */\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9184:9202   */\n  tag_183\n  tag_64\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9065:9204   */\ntag_182:\n    /* \"#utility.yul\":8849:9211   */\n  pop\n    /* \"#utility.yul\":8801:9211   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9217:9343   */\ntag_69:\n    /* \"#utility.yul\":9254:9261   */\n  0x00\n    /* \"#utility.yul\":9294:9336   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9287:9292   */\n  dup3\n    /* \"#utility.yul\":9283:9337   */\n  and\n    /* \"#utility.yul\":9272:9337   */\n  swap1\n  pop\n    /* \"#utility.yul\":9217:9343   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9349:9445   */\ntag_70:\n    /* \"#utility.yul\":9386:9393   */\n  0x00\n    /* \"#utility.yul\":9415:9439   */\n  tag_186\n    /* \"#utility.yul\":9433:9438   */\n  dup3\n    /* \"#utility.yul\":9415:9439   */\n  tag_69\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9404:9439   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_71:\n    /* \"#utility.yul\":9538:9562   */\n  tag_188\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_70\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_24:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_190\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_71\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_30:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_192\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_42\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_193\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_42\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_195\n  tag_64\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9951:9987   */\ntag_194:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_72:\n    /* \"#utility.yul\":10087:10111   */\n  tag_197\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_42\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_34:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_199\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10405:10477   */\n  tag_200\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_72\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10487:10559   */\n  tag_201\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_38:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_203\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_72\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"main.sol\":114:3237  contract StackContract is ERC20 {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":114:3237  contract StackContract is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x2e17de78\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":1894:2722  function unstake(uint256 amount) external {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":195:224  uint256 public rewardRate = 1 */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":230:250  address public owner */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":414:455  mapping(address => Staker) public stakers */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":3139:3235  function setRewardRate(uint256 newRate) external onlyOwner {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"main.sol\":1033:1836  function stake(uint256 amount) external {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":2728:3085  function calculateReward(address stakerAddress)... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main.sol\":1894:2722  function unstake(uint256 amount) external {... */\n    tag_44:\n        /* \"main.sol\":1946:1967  Staker storage staker */\n      0x00\n        /* \"main.sol\":1970:1977  stakers */\n      0x07\n        /* \"main.sol\":1970:1989  stakers[msg.sender] */\n      0x00\n        /* \"main.sol\":1978:1988  msg.sender */\n      caller\n        /* \"main.sol\":1970:1989  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":1946:1989  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"main.sol\":2030:2036  amount */\n      dup2\n        /* \"main.sol\":2007:2013  staker */\n      dup2\n        /* \"main.sol\":2007:2026  staker.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"main.sol\":2007:2036  staker.stakedAmount >= amount */\n      lt\n      iszero\n        /* \"main.sol\":1999:2065  require(staker.stakedAmount >= amount, \"Not enough staked tokens\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"main.sol\":2140:2161  uint256 pendingReward */\n      0x00\n        /* \"main.sol\":2164:2191  calculateReward(msg.sender) */\n      tag_111\n        /* \"main.sol\":2180:2190  msg.sender */\n      caller\n        /* \"main.sol\":2164:2179  calculateReward */\n      tag_81\n        /* \"main.sol\":2164:2191  calculateReward(msg.sender) */\n      jump\t// in\n    tag_111:\n        /* \"main.sol\":2140:2191  uint256 pendingReward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"main.sol\":2221:2222  0 */\n      0x00\n        /* \"main.sol\":2205:2218  pendingReward */\n      dup2\n        /* \"main.sol\":2205:2222  pendingReward > 0 */\n      gt\n        /* \"main.sol\":2201:2378  if (pendingReward > 0) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"main.sol\":2238:2270  _mint(msg.sender, pendingReward) */\n      tag_113\n        /* \"main.sol\":2244:2254  msg.sender */\n      caller\n        /* \"main.sol\":2256:2269  pendingReward */\n      dup3\n        /* \"main.sol\":2238:2243  _mint */\n      tag_114\n        /* \"main.sol\":2238:2270  _mint(msg.sender, pendingReward) */\n      jump\t// in\n    tag_113:\n        /* \"main.sol\":2341:2351  msg.sender */\n      caller\n        /* \"main.sol\":2327:2367  RewardClaimed(msg.sender, pendingReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"main.sol\":2353:2366  pendingReward */\n      dup3\n        /* \"main.sol\":2327:2367  RewardClaimed(msg.sender, pendingReward) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"main.sol\":2201:2378  if (pendingReward > 0) {... */\n    tag_112:\n        /* \"main.sol\":2442:2448  amount */\n      dup3\n        /* \"main.sol\":2419:2425  staker */\n      dup3\n        /* \"main.sol\":2419:2438  staker.stakedAmount */\n      0x00\n      add\n      0x00\n        /* \"main.sol\":2419:2448  staker.stakedAmount -= amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":2500:2510  rewardRate */\n      sload(0x05)\n        /* \"main.sol\":2478:2484  staker */\n      dup3\n        /* \"main.sol\":2478:2497  staker.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"main.sol\":2478:2510  staker.stakedAmount * rewardRate */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"main.sol\":2458:2464  staker */\n      dup3\n        /* \"main.sol\":2458:2475  staker.rewardDebt */\n      0x01\n      add\n        /* \"main.sol\":2458:2510  staker.rewardDebt = staker.stakedAmount * rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":2544:2559  block.timestamp */\n      timestamp\n        /* \"main.sol\":2520:2526  staker */\n      dup3\n        /* \"main.sol\":2520:2541  staker.stakeTimestamp */\n      0x02\n      add\n        /* \"main.sol\":2520:2559  staker.stakeTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":2627:2671  _transfer(address(this), msg.sender, amount) */\n      tag_120\n        /* \"main.sol\":2645:2649  this */\n      address\n        /* \"main.sol\":2652:2662  msg.sender */\n      caller\n        /* \"main.sol\":2664:2670  amount */\n      dup6\n        /* \"main.sol\":2627:2636  _transfer */\n      tag_106\n        /* \"main.sol\":2627:2671  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_120:\n        /* \"main.sol\":2696:2706  msg.sender */\n      caller\n        /* \"main.sol\":2687:2715  Unstaked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"main.sol\":2708:2714  amount */\n      dup5\n        /* \"main.sol\":2687:2715  Unstaked(msg.sender, amount) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"main.sol\":1936:2722  {... */\n      pop\n      pop\n        /* \"main.sol\":1894:2722  function unstake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main.sol\":195:224  uint256 public rewardRate = 1 */\n    tag_55:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"main.sol\":230:250  address public owner */\n    tag_58:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"main.sol\":414:455  mapping(address => Staker) public stakers */\n    tag_63:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_90\n      jump\t// in\n    tag_125:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_90\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"main.sol\":3139:3235  function setRewardRate(uint256 newRate) external onlyOwner {... */\n    tag_71:\n        /* \"main.sol\":950:960  msg.sender */\n      caller\n        /* \"main.sol\":941:960  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":941:946  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":941:960  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main.sol\":933:977  require(owner == msg.sender, \"Only owner!!\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"main.sol\":3221:3228  newRate */\n      dup1\n        /* \"main.sol\":3208:3218  rewardRate */\n      0x05\n        /* \"main.sol\":3208:3228  rewardRate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":3139:3235  function setRewardRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"main.sol\":1033:1836  function stake(uint256 amount) external {... */\n    tag_74:\n        /* \"main.sol\":1100:1101  0 */\n      0x00\n        /* \"main.sol\":1091:1097  amount */\n      dup2\n        /* \"main.sol\":1091:1101  amount > 0 */\n      gt\n        /* \"main.sol\":1083:1130  require(amount > 0, \"Cannot stake zero tokens\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"main.sol\":1141:1162  Staker storage staker */\n      0x00\n        /* \"main.sol\":1165:1172  stakers */\n      0x07\n        /* \"main.sol\":1165:1184  stakers[msg.sender] */\n      0x00\n        /* \"main.sol\":1173:1183  msg.sender */\n      caller\n        /* \"main.sol\":1165:1184  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":1141:1184  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"main.sol\":1262:1283  uint256 pendingReward */\n      0x00\n        /* \"main.sol\":1286:1313  calculateReward(msg.sender) */\n      tag_139\n        /* \"main.sol\":1302:1312  msg.sender */\n      caller\n        /* \"main.sol\":1286:1301  calculateReward */\n      tag_81\n        /* \"main.sol\":1286:1313  calculateReward(msg.sender) */\n      jump\t// in\n    tag_139:\n        /* \"main.sol\":1262:1313  uint256 pendingReward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"main.sol\":1343:1344  0 */\n      0x00\n        /* \"main.sol\":1327:1340  pendingReward */\n      dup2\n        /* \"main.sol\":1327:1344  pendingReward > 0 */\n      gt\n        /* \"main.sol\":1323:1500  if (pendingReward > 0) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"main.sol\":1360:1392  _mint(msg.sender, pendingReward) */\n      tag_141\n        /* \"main.sol\":1366:1376  msg.sender */\n      caller\n        /* \"main.sol\":1378:1391  pendingReward */\n      dup3\n        /* \"main.sol\":1360:1365  _mint */\n      tag_114\n        /* \"main.sol\":1360:1392  _mint(msg.sender, pendingReward) */\n      jump\t// in\n    tag_141:\n        /* \"main.sol\":1463:1473  msg.sender */\n      caller\n        /* \"main.sol\":1449:1489  RewardClaimed(msg.sender, pendingReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"main.sol\":1475:1488  pendingReward */\n      dup3\n        /* \"main.sol\":1449:1489  RewardClaimed(msg.sender, pendingReward) */\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"main.sol\":1323:1500  if (pendingReward > 0) {... */\n    tag_140:\n        /* \"main.sol\":1561:1605  _transfer(msg.sender, address(this), amount) */\n      tag_143\n        /* \"main.sol\":1571:1581  msg.sender */\n      caller\n        /* \"main.sol\":1591:1595  this */\n      address\n        /* \"main.sol\":1598:1604  amount */\n      dup6\n        /* \"main.sol\":1561:1570  _transfer */\n      tag_106\n        /* \"main.sol\":1561:1605  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_143:\n        /* \"main.sol\":1670:1676  amount */\n      dup3\n        /* \"main.sol\":1647:1653  staker */\n      dup3\n        /* \"main.sol\":1647:1666  staker.stakedAmount */\n      0x00\n      add\n      0x00\n        /* \"main.sol\":1647:1676  staker.stakedAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":1710:1725  block.timestamp */\n      timestamp\n        /* \"main.sol\":1686:1692  staker */\n      dup3\n        /* \"main.sol\":1686:1707  staker.stakeTimestamp */\n      0x02\n      add\n        /* \"main.sol\":1686:1725  staker.stakeTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":1777:1787  rewardRate */\n      sload(0x05)\n        /* \"main.sol\":1755:1761  staker */\n      dup3\n        /* \"main.sol\":1755:1774  staker.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"main.sol\":1755:1787  staker.stakedAmount * rewardRate */\n      tag_146\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_146:\n        /* \"main.sol\":1735:1741  staker */\n      dup3\n        /* \"main.sol\":1735:1752  staker.rewardDebt */\n      0x01\n      add\n        /* \"main.sol\":1735:1787  staker.rewardDebt = staker.stakedAmount * rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":1810:1820  msg.sender */\n      caller\n        /* \"main.sol\":1803:1829  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"main.sol\":1822:1828  amount */\n      dup5\n        /* \"main.sol\":1803:1829  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"main.sol\":1073:1836  {... */\n      pop\n      pop\n        /* \"main.sol\":1033:1836  function stake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"main.sol\":2728:3085  function calculateReward(address stakerAddress)... */\n    tag_81:\n        /* \"main.sol\":2821:2828  uint256 */\n      0x00\n        /* \"main.sol\":2844:2865  Staker storage staker */\n      dup1\n        /* \"main.sol\":2868:2875  stakers */\n      0x07\n        /* \"main.sol\":2868:2890  stakers[stakerAddress] */\n      0x00\n        /* \"main.sol\":2876:2889  stakerAddress */\n      dup5\n        /* \"main.sol\":2868:2890  stakers[stakerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":2844:2890  Staker storage staker = stakers[stakerAddress] */\n      swap1\n      pop\n        /* \"main.sol\":2900:2919  uint256 stakingTime */\n      0x00\n        /* \"main.sol\":2940:2946  staker */\n      dup2\n        /* \"main.sol\":2940:2961  staker.stakeTimestamp */\n      0x02\n      add\n      sload\n        /* \"main.sol\":2922:2937  block.timestamp */\n      timestamp\n        /* \"main.sol\":2922:2961  block.timestamp - staker.stakeTimestamp */\n      tag_152\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_152:\n        /* \"main.sol\":2900:2961  uint256 stakingTime = block.timestamp - staker.stakeTimestamp */\n      swap1\n      pop\n        /* \"main.sol\":2971:2985  uint256 reward */\n      0x00\n        /* \"main.sol\":3051:3055  1e18 */\n      0x0de0b6b3a7640000\n        /* \"main.sol\":3024:3035  stakingTime */\n      dup3\n        /* \"main.sol\":3011:3021  rewardRate */\n      sload(0x05)\n        /* \"main.sol\":2989:2995  staker */\n      dup6\n        /* \"main.sol\":2989:3008  staker.stakedAmount */\n      0x00\n      add\n      sload\n        /* \"main.sol\":2989:3021  staker.stakedAmount * rewardRate */\n      tag_153\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_153:\n        /* \"main.sol\":2989:3035  staker.stakedAmount * rewardRate * stakingTime */\n      tag_154\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_154:\n        /* \"main.sol\":2988:3055  (staker.stakedAmount * rewardRate * stakingTime) /... */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"main.sol\":2971:3055  uint256 reward = (staker.stakedAmount * rewardRate * stakingTime) /... */\n      swap1\n      pop\n        /* \"main.sol\":3072:3078  reward */\n      dup1\n        /* \"main.sol\":3065:3078  return reward */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"main.sol\":2728:3085  function calculateReward(address stakerAddress)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_189:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_190)\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_194)\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_196:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_197:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_198:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_199:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_200:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_232\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_196\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":711:782   */\n      tag_233\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_197\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_234\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_198\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":881:910   */\n      tag_235\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_199\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_237\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_200\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_202:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_204:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_205:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_243\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_204\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_206:\n        /* \"#utility.yul\":1876:1900   */\n      tag_245\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_205\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_246:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_207:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_248\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_206\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_208:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_209:\n        /* \"#utility.yul\":2232:2256   */\n      tag_251\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_208\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_252:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_210:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_254\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_209\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_257\n      tag_202\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2525:2644   */\n    tag_256:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_258\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_207\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_259\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_210\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_211:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_212:\n        /* \"#utility.yul\":3089:3110   */\n      tag_262\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_211\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_264\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_212\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_213:\n        /* \"#utility.yul\":3426:3450   */\n      tag_266\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_208\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_268\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_213\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_271\n      tag_202\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3801:3920   */\n    tag_270:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_272\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_207\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_273\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_207\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_274\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_210\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_43:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_277\n      tag_202\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4392:4511   */\n    tag_276:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_278\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_210\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_214:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_215:\n        /* \"#utility.yul\":4826:4848   */\n      tag_281\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_214\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_48:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_283\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_215\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_51:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_286\n      tag_202\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5157:5276   */\n    tag_285:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_287\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_207\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_216:\n        /* \"#utility.yul\":5503:5527   */\n      tag_289\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_205\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_60:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_291\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_216\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6210   */\n    tag_65:\n        /* \"#utility.yul\":5917:5921   */\n      0x00\n        /* \"#utility.yul\":5955:5957   */\n      0x60\n        /* \"#utility.yul\":5944:5953   */\n      dup3\n        /* \"#utility.yul\":5940:5958   */\n      add\n        /* \"#utility.yul\":5932:5958   */\n      swap1\n      pop\n        /* \"#utility.yul\":5968:6039   */\n      tag_293\n        /* \"#utility.yul\":6036:6037   */\n      0x00\n        /* \"#utility.yul\":6025:6034   */\n      dup4\n        /* \"#utility.yul\":6021:6038   */\n      add\n        /* \"#utility.yul\":6012:6018   */\n      dup7\n        /* \"#utility.yul\":5968:6039   */\n      tag_213\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6049:6121   */\n      tag_294\n        /* \"#utility.yul\":6117:6119   */\n      0x20\n        /* \"#utility.yul\":6106:6115   */\n      dup4\n        /* \"#utility.yul\":6102:6120   */\n      add\n        /* \"#utility.yul\":6093:6099   */\n      dup6\n        /* \"#utility.yul\":6049:6121   */\n      tag_213\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6131:6203   */\n      tag_295\n        /* \"#utility.yul\":6199:6201   */\n      0x40\n        /* \"#utility.yul\":6188:6197   */\n      dup4\n        /* \"#utility.yul\":6184:6202   */\n      add\n        /* \"#utility.yul\":6175:6181   */\n      dup5\n        /* \"#utility.yul\":6131:6203   */\n      tag_213\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5768:6210   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6216:6690   */\n    tag_85:\n        /* \"#utility.yul\":6284:6290   */\n      0x00\n        /* \"#utility.yul\":6292:6298   */\n      dup1\n        /* \"#utility.yul\":6341:6343   */\n      0x40\n        /* \"#utility.yul\":6329:6338   */\n      dup4\n        /* \"#utility.yul\":6320:6327   */\n      dup6\n        /* \"#utility.yul\":6316:6339   */\n      sub\n        /* \"#utility.yul\":6312:6344   */\n      slt\n        /* \"#utility.yul\":6309:6428   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6347:6426   */\n      tag_298\n      tag_202\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6309:6428   */\n    tag_297:\n        /* \"#utility.yul\":6467:6468   */\n      0x00\n        /* \"#utility.yul\":6492:6545   */\n      tag_299\n        /* \"#utility.yul\":6537:6544   */\n      dup6\n        /* \"#utility.yul\":6528:6534   */\n      dup3\n        /* \"#utility.yul\":6517:6526   */\n      dup7\n        /* \"#utility.yul\":6513:6535   */\n      add\n        /* \"#utility.yul\":6492:6545   */\n      tag_207\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6482:6545   */\n      swap3\n      pop\n        /* \"#utility.yul\":6438:6555   */\n      pop\n        /* \"#utility.yul\":6594:6596   */\n      0x20\n        /* \"#utility.yul\":6620:6673   */\n      tag_300\n        /* \"#utility.yul\":6665:6672   */\n      dup6\n        /* \"#utility.yul\":6656:6662   */\n      dup3\n        /* \"#utility.yul\":6645:6654   */\n      dup7\n        /* \"#utility.yul\":6641:6663   */\n      add\n        /* \"#utility.yul\":6620:6673   */\n      tag_207\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6610:6673   */\n      swap2\n      pop\n        /* \"#utility.yul\":6565:6683   */\n      pop\n        /* \"#utility.yul\":6216:6690   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6696:6876   */\n    tag_217:\n        /* \"#utility.yul\":6744:6821   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6741:6742   */\n      0x00\n        /* \"#utility.yul\":6734:6822   */\n      mstore\n        /* \"#utility.yul\":6841:6845   */\n      0x22\n        /* \"#utility.yul\":6838:6839   */\n      0x04\n        /* \"#utility.yul\":6831:6846   */\n      mstore\n        /* \"#utility.yul\":6865:6869   */\n      0x24\n        /* \"#utility.yul\":6862:6863   */\n      0x00\n        /* \"#utility.yul\":6855:6870   */\n      revert\n        /* \"#utility.yul\":6882:7202   */\n    tag_90:\n        /* \"#utility.yul\":6926:6932   */\n      0x00\n        /* \"#utility.yul\":6963:6964   */\n      0x02\n        /* \"#utility.yul\":6957:6961   */\n      dup3\n        /* \"#utility.yul\":6953:6965   */\n      div\n        /* \"#utility.yul\":6943:6965   */\n      swap1\n      pop\n        /* \"#utility.yul\":7010:7011   */\n      0x01\n        /* \"#utility.yul\":7004:7008   */\n      dup3\n        /* \"#utility.yul\":7000:7012   */\n      and\n        /* \"#utility.yul\":7031:7049   */\n      dup1\n        /* \"#utility.yul\":7021:7102   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7087:7091   */\n      0x7f\n        /* \"#utility.yul\":7079:7085   */\n      dup3\n        /* \"#utility.yul\":7075:7092   */\n      and\n        /* \"#utility.yul\":7065:7092   */\n      swap2\n      pop\n        /* \"#utility.yul\":7021:7102   */\n    tag_303:\n        /* \"#utility.yul\":7149:7151   */\n      0x20\n        /* \"#utility.yul\":7141:7147   */\n      dup3\n        /* \"#utility.yul\":7138:7152   */\n      lt\n        /* \"#utility.yul\":7118:7136   */\n      dup2\n        /* \"#utility.yul\":7115:7153   */\n      sub\n        /* \"#utility.yul\":7112:7196   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":7168:7186   */\n      tag_305\n      tag_217\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7112:7196   */\n    tag_304:\n        /* \"#utility.yul\":6933:7202   */\n      pop\n        /* \"#utility.yul\":6882:7202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7382   */\n    tag_218:\n        /* \"#utility.yul\":7348:7374   */\n      0x4e6f7420656e6f756768207374616b656420746f6b656e730000000000000000\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7336:7342   */\n      dup3\n        /* \"#utility.yul\":7332:7346   */\n      add\n        /* \"#utility.yul\":7325:7375   */\n      mstore\n        /* \"#utility.yul\":7208:7382   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7388:7754   */\n    tag_219:\n        /* \"#utility.yul\":7530:7533   */\n      0x00\n        /* \"#utility.yul\":7551:7618   */\n      tag_308\n        /* \"#utility.yul\":7615:7617   */\n      0x18\n        /* \"#utility.yul\":7610:7613   */\n      dup4\n        /* \"#utility.yul\":7551:7618   */\n      tag_197\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7544:7618   */\n      swap2\n      pop\n        /* \"#utility.yul\":7627:7720   */\n      tag_309\n        /* \"#utility.yul\":7716:7719   */\n      dup3\n        /* \"#utility.yul\":7627:7720   */\n      tag_218\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7745:7747   */\n      0x20\n        /* \"#utility.yul\":7740:7743   */\n      dup3\n        /* \"#utility.yul\":7736:7748   */\n      add\n        /* \"#utility.yul\":7729:7748   */\n      swap1\n      pop\n        /* \"#utility.yul\":7388:7754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7760:8179   */\n    tag_110:\n        /* \"#utility.yul\":7926:7930   */\n      0x00\n        /* \"#utility.yul\":7964:7966   */\n      0x20\n        /* \"#utility.yul\":7953:7962   */\n      dup3\n        /* \"#utility.yul\":7949:7967   */\n      add\n        /* \"#utility.yul\":7941:7967   */\n      swap1\n      pop\n        /* \"#utility.yul\":8013:8022   */\n      dup2\n        /* \"#utility.yul\":8007:8011   */\n      dup2\n        /* \"#utility.yul\":8003:8023   */\n      sub\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7988:7997   */\n      dup4\n        /* \"#utility.yul\":7984:8001   */\n      add\n        /* \"#utility.yul\":7977:8024   */\n      mstore\n        /* \"#utility.yul\":8041:8172   */\n      tag_311\n        /* \"#utility.yul\":8167:8171   */\n      dup2\n        /* \"#utility.yul\":8041:8172   */\n      tag_219\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8033:8172   */\n      swap1\n      pop\n        /* \"#utility.yul\":7760:8179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8185:8365   */\n    tag_220:\n        /* \"#utility.yul\":8233:8310   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8230:8231   */\n      0x00\n        /* \"#utility.yul\":8223:8311   */\n      mstore\n        /* \"#utility.yul\":8330:8334   */\n      0x11\n        /* \"#utility.yul\":8327:8328   */\n      0x04\n        /* \"#utility.yul\":8320:8335   */\n      mstore\n        /* \"#utility.yul\":8354:8358   */\n      0x24\n        /* \"#utility.yul\":8351:8352   */\n      0x00\n        /* \"#utility.yul\":8344:8359   */\n      revert\n        /* \"#utility.yul\":8371:8565   */\n    tag_117:\n        /* \"#utility.yul\":8411:8415   */\n      0x00\n        /* \"#utility.yul\":8431:8451   */\n      tag_314\n        /* \"#utility.yul\":8449:8450   */\n      dup3\n        /* \"#utility.yul\":8431:8451   */\n      tag_208\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8426:8451   */\n      swap2\n      pop\n        /* \"#utility.yul\":8465:8485   */\n      tag_315\n        /* \"#utility.yul\":8483:8484   */\n      dup4\n        /* \"#utility.yul\":8465:8485   */\n      tag_208\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8460:8485   */\n      swap3\n      pop\n        /* \"#utility.yul\":8509:8510   */\n      dup3\n        /* \"#utility.yul\":8506:8507   */\n      dup3\n        /* \"#utility.yul\":8502:8511   */\n      sub\n        /* \"#utility.yul\":8494:8511   */\n      swap1\n      pop\n        /* \"#utility.yul\":8533:8534   */\n      dup2\n        /* \"#utility.yul\":8527:8531   */\n      dup2\n        /* \"#utility.yul\":8524:8535   */\n      gt\n        /* \"#utility.yul\":8521:8558   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":8538:8556   */\n      tag_317\n      tag_220\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8521:8558   */\n    tag_316:\n        /* \"#utility.yul\":8371:8565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8571:8981   */\n    tag_119:\n        /* \"#utility.yul\":8611:8618   */\n      0x00\n        /* \"#utility.yul\":8634:8654   */\n      tag_319\n        /* \"#utility.yul\":8652:8653   */\n      dup3\n        /* \"#utility.yul\":8634:8654   */\n      tag_208\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8629:8654   */\n      swap2\n      pop\n        /* \"#utility.yul\":8668:8688   */\n      tag_320\n        /* \"#utility.yul\":8686:8687   */\n      dup4\n        /* \"#utility.yul\":8668:8688   */\n      tag_208\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8663:8688   */\n      swap3\n      pop\n        /* \"#utility.yul\":8723:8724   */\n      dup3\n        /* \"#utility.yul\":8720:8721   */\n      dup3\n        /* \"#utility.yul\":8716:8725   */\n      mul\n        /* \"#utility.yul\":8745:8775   */\n      tag_321\n        /* \"#utility.yul\":8763:8774   */\n      dup2\n        /* \"#utility.yul\":8745:8775   */\n      tag_208\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8734:8775   */\n      swap2\n      pop\n        /* \"#utility.yul\":8924:8925   */\n      dup3\n        /* \"#utility.yul\":8915:8922   */\n      dup3\n        /* \"#utility.yul\":8911:8926   */\n      div\n        /* \"#utility.yul\":8908:8909   */\n      dup5\n        /* \"#utility.yul\":8905:8927   */\n      eq\n        /* \"#utility.yul\":8885:8886   */\n      dup4\n        /* \"#utility.yul\":8878:8887   */\n      iszero\n        /* \"#utility.yul\":8858:8941   */\n      or\n        /* \"#utility.yul\":8835:8974   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":8954:8972   */\n      tag_323\n      tag_220\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8835:8974   */\n    tag_322:\n        /* \"#utility.yul\":8619:8981   */\n      pop\n        /* \"#utility.yul\":8571:8981   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8987:9149   */\n    tag_221:\n        /* \"#utility.yul\":9127:9141   */\n      0x4f6e6c79206f776e657221210000000000000000000000000000000000000000\n        /* \"#utility.yul\":9123:9124   */\n      0x00\n        /* \"#utility.yul\":9115:9121   */\n      dup3\n        /* \"#utility.yul\":9111:9125   */\n      add\n        /* \"#utility.yul\":9104:9142   */\n      mstore\n        /* \"#utility.yul\":8987:9149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9155:9521   */\n    tag_222:\n        /* \"#utility.yul\":9297:9300   */\n      0x00\n        /* \"#utility.yul\":9318:9385   */\n      tag_326\n        /* \"#utility.yul\":9382:9384   */\n      0x0c\n        /* \"#utility.yul\":9377:9380   */\n      dup4\n        /* \"#utility.yul\":9318:9385   */\n      tag_197\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9311:9385   */\n      swap2\n      pop\n        /* \"#utility.yul\":9394:9487   */\n      tag_327\n        /* \"#utility.yul\":9483:9486   */\n      dup3\n        /* \"#utility.yul\":9394:9487   */\n      tag_221\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9512:9514   */\n      0x20\n        /* \"#utility.yul\":9507:9510   */\n      dup3\n        /* \"#utility.yul\":9503:9515   */\n      add\n        /* \"#utility.yul\":9496:9515   */\n      swap1\n      pop\n        /* \"#utility.yul\":9155:9521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9527:9946   */\n    tag_133:\n        /* \"#utility.yul\":9693:9697   */\n      0x00\n        /* \"#utility.yul\":9731:9733   */\n      0x20\n        /* \"#utility.yul\":9720:9729   */\n      dup3\n        /* \"#utility.yul\":9716:9734   */\n      add\n        /* \"#utility.yul\":9708:9734   */\n      swap1\n      pop\n        /* \"#utility.yul\":9780:9789   */\n      dup2\n        /* \"#utility.yul\":9774:9778   */\n      dup2\n        /* \"#utility.yul\":9770:9790   */\n      sub\n        /* \"#utility.yul\":9766:9767   */\n      0x00\n        /* \"#utility.yul\":9755:9764   */\n      dup4\n        /* \"#utility.yul\":9751:9768   */\n      add\n        /* \"#utility.yul\":9744:9791   */\n      mstore\n        /* \"#utility.yul\":9808:9939   */\n      tag_329\n        /* \"#utility.yul\":9934:9938   */\n      dup2\n        /* \"#utility.yul\":9808:9939   */\n      tag_222\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9800:9939   */\n      swap1\n      pop\n        /* \"#utility.yul\":9527:9946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9952:10126   */\n    tag_223:\n        /* \"#utility.yul\":10092:10118   */\n      0x43616e6e6f74207374616b65207a65726f20746f6b656e730000000000000000\n        /* \"#utility.yul\":10088:10089   */\n      0x00\n        /* \"#utility.yul\":10080:10086   */\n      dup3\n        /* \"#utility.yul\":10076:10090   */\n      add\n        /* \"#utility.yul\":10069:10119   */\n      mstore\n        /* \"#utility.yul\":9952:10126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10132:10498   */\n    tag_224:\n        /* \"#utility.yul\":10274:10277   */\n      0x00\n        /* \"#utility.yul\":10295:10362   */\n      tag_332\n        /* \"#utility.yul\":10359:10361   */\n      0x18\n        /* \"#utility.yul\":10354:10357   */\n      dup4\n        /* \"#utility.yul\":10295:10362   */\n      tag_197\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10288:10362   */\n      swap2\n      pop\n        /* \"#utility.yul\":10371:10464   */\n      tag_333\n        /* \"#utility.yul\":10460:10463   */\n      dup3\n        /* \"#utility.yul\":10371:10464   */\n      tag_223\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10489:10491   */\n      0x20\n        /* \"#utility.yul\":10484:10487   */\n      dup3\n        /* \"#utility.yul\":10480:10492   */\n      add\n        /* \"#utility.yul\":10473:10492   */\n      swap1\n      pop\n        /* \"#utility.yul\":10132:10498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10504:10923   */\n    tag_138:\n        /* \"#utility.yul\":10670:10674   */\n      0x00\n        /* \"#utility.yul\":10708:10710   */\n      0x20\n        /* \"#utility.yul\":10697:10706   */\n      dup3\n        /* \"#utility.yul\":10693:10711   */\n      add\n        /* \"#utility.yul\":10685:10711   */\n      swap1\n      pop\n        /* \"#utility.yul\":10757:10766   */\n      dup2\n        /* \"#utility.yul\":10751:10755   */\n      dup2\n        /* \"#utility.yul\":10747:10767   */\n      sub\n        /* \"#utility.yul\":10743:10744   */\n      0x00\n        /* \"#utility.yul\":10732:10741   */\n      dup4\n        /* \"#utility.yul\":10728:10745   */\n      add\n        /* \"#utility.yul\":10721:10768   */\n      mstore\n        /* \"#utility.yul\":10785:10916   */\n      tag_335\n        /* \"#utility.yul\":10911:10915   */\n      dup2\n        /* \"#utility.yul\":10785:10916   */\n      tag_224\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10777:10916   */\n      swap1\n      pop\n        /* \"#utility.yul\":10504:10923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10929:11120   */\n    tag_145:\n        /* \"#utility.yul\":10969:10972   */\n      0x00\n        /* \"#utility.yul\":10988:11008   */\n      tag_337\n        /* \"#utility.yul\":11006:11007   */\n      dup3\n        /* \"#utility.yul\":10988:11008   */\n      tag_208\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10983:11008   */\n      swap2\n      pop\n        /* \"#utility.yul\":11022:11042   */\n      tag_338\n        /* \"#utility.yul\":11040:11041   */\n      dup4\n        /* \"#utility.yul\":11022:11042   */\n      tag_208\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11017:11042   */\n      swap3\n      pop\n        /* \"#utility.yul\":11065:11066   */\n      dup3\n        /* \"#utility.yul\":11062:11063   */\n      dup3\n        /* \"#utility.yul\":11058:11067   */\n      add\n        /* \"#utility.yul\":11051:11067   */\n      swap1\n      pop\n        /* \"#utility.yul\":11086:11089   */\n      dup1\n        /* \"#utility.yul\":11083:11084   */\n      dup3\n        /* \"#utility.yul\":11080:11090   */\n      gt\n        /* \"#utility.yul\":11077:11113   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":11093:11111   */\n      tag_340\n      tag_220\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11077:11113   */\n    tag_339:\n        /* \"#utility.yul\":10929:11120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11126:11306   */\n    tag_225:\n        /* \"#utility.yul\":11174:11251   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11171:11172   */\n      0x00\n        /* \"#utility.yul\":11164:11252   */\n      mstore\n        /* \"#utility.yul\":11271:11275   */\n      0x12\n        /* \"#utility.yul\":11268:11269   */\n      0x04\n        /* \"#utility.yul\":11261:11276   */\n      mstore\n        /* \"#utility.yul\":11295:11299   */\n      0x24\n        /* \"#utility.yul\":11292:11293   */\n      0x00\n        /* \"#utility.yul\":11285:11300   */\n      revert\n        /* \"#utility.yul\":11312:11497   */\n    tag_156:\n        /* \"#utility.yul\":11352:11353   */\n      0x00\n        /* \"#utility.yul\":11369:11389   */\n      tag_343\n        /* \"#utility.yul\":11387:11388   */\n      dup3\n        /* \"#utility.yul\":11369:11389   */\n      tag_208\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11364:11389   */\n      swap2\n      pop\n        /* \"#utility.yul\":11403:11423   */\n      tag_344\n        /* \"#utility.yul\":11421:11422   */\n      dup4\n        /* \"#utility.yul\":11403:11423   */\n      tag_208\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11398:11423   */\n      swap3\n      pop\n        /* \"#utility.yul\":11442:11443   */\n      dup3\n        /* \"#utility.yul\":11432:11467   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":11447:11465   */\n      tag_346\n      tag_225\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":11432:11467   */\n    tag_345:\n        /* \"#utility.yul\":11489:11490   */\n      dup3\n        /* \"#utility.yul\":11486:11487   */\n      dup3\n        /* \"#utility.yul\":11482:11491   */\n      div\n        /* \"#utility.yul\":11477:11491   */\n      swap1\n      pop\n        /* \"#utility.yul\":11312:11497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11503:11945   */\n    tag_167:\n        /* \"#utility.yul\":11652:11656   */\n      0x00\n        /* \"#utility.yul\":11690:11692   */\n      0x60\n        /* \"#utility.yul\":11679:11688   */\n      dup3\n        /* \"#utility.yul\":11675:11693   */\n      add\n        /* \"#utility.yul\":11667:11693   */\n      swap1\n      pop\n        /* \"#utility.yul\":11703:11774   */\n      tag_348\n        /* \"#utility.yul\":11771:11772   */\n      0x00\n        /* \"#utility.yul\":11760:11769   */\n      dup4\n        /* \"#utility.yul\":11756:11773   */\n      add\n        /* \"#utility.yul\":11747:11753   */\n      dup7\n        /* \"#utility.yul\":11703:11774   */\n      tag_216\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11784:11856   */\n      tag_349\n        /* \"#utility.yul\":11852:11854   */\n      0x20\n        /* \"#utility.yul\":11841:11850   */\n      dup4\n        /* \"#utility.yul\":11837:11855   */\n      add\n        /* \"#utility.yul\":11828:11834   */\n      dup6\n        /* \"#utility.yul\":11784:11856   */\n      tag_213\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11866:11938   */\n      tag_350\n        /* \"#utility.yul\":11934:11936   */\n      0x40\n        /* \"#utility.yul\":11923:11932   */\n      dup4\n        /* \"#utility.yul\":11919:11937   */\n      add\n        /* \"#utility.yul\":11910:11916   */\n      dup5\n        /* \"#utility.yul\":11866:11938   */\n      tag_213\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11503:11945   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e9380e6b77adcc0b3c6ef864f51d289fb0617f4ff4c2dd3e4cf127d3a5ab37764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 359,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 492,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 351,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:6",
										"nodeType": "YulBlock",
										"src": "0:10797:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "608:80:6",
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nativeSrc": "618:22:6",
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nativeSrc": "627:13:6",
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nativeSrc": "649:33:6",
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nativeSrc": "649:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:6",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:6",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:6",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nativeSrc": "771:274:6",
													"nodeType": "YulBlock",
													"src": "771:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:6",
																"nodeType": "YulBlock",
																"src": "817:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:6"
																			},
																			"nativeSrc": "819:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:6"
																		},
																		"nativeSrc": "819:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:6"
																		},
																		"nativeSrc": "788:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:6",
																		"nodeType": "YulLiteral",
																		"src": "813:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:6"
																},
																"nativeSrc": "784:32:6",
																"nodeType": "YulFunctionCall",
																"src": "784:32:6"
															},
															"nativeSrc": "781:119:6",
															"nodeType": "YulIf",
															"src": "781:119:6"
														},
														{
															"nativeSrc": "910:128:6",
															"nodeType": "YulBlock",
															"src": "910:128:6",
															"statements": [
																{
																	"nativeSrc": "925:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:6",
																		"nodeType": "YulLiteral",
																		"src": "939:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:6",
																			"nodeType": "YulTypedName",
																			"src": "929:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:6",
																	"nodeType": "YulAssignment",
																	"src": "954:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:6"
																				},
																				"nativeSrc": "996:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:6"
																		},
																		"nativeSrc": "964:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:6",
														"nodeType": "YulTypedName",
														"src": "741:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:6",
														"nodeType": "YulTypedName",
														"src": "752:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:6",
														"nodeType": "YulTypedName",
														"src": "764:6:6",
														"type": ""
													}
												],
												"src": "694:351:6"
											},
											{
												"body": {
													"nativeSrc": "1110:40:6",
													"nodeType": "YulBlock",
													"src": "1110:40:6",
													"statements": [
														{
															"nativeSrc": "1121:22:6",
															"nodeType": "YulAssignment",
															"src": "1121:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:6"
																},
																"nativeSrc": "1131:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:6",
														"nodeType": "YulTypedName",
														"src": "1093:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:6",
														"nodeType": "YulTypedName",
														"src": "1103:6:6",
														"type": ""
													}
												],
												"src": "1051:99:6"
											},
											{
												"body": {
													"nativeSrc": "1184:152:6",
													"nodeType": "YulBlock",
													"src": "1184:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nativeSrc": "1194:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:6"
															},
															"nativeSrc": "1194:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:6"
																},
																"nativeSrc": "1291:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:6"
															},
															"nativeSrc": "1291:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:6"
																},
																"nativeSrc": "1315:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:6"
															},
															"nativeSrc": "1315:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:6"
											},
											{
												"body": {
													"nativeSrc": "1370:152:6",
													"nodeType": "YulBlock",
													"src": "1370:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:6"
																},
																"nativeSrc": "1380:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:6"
															},
															"nativeSrc": "1380:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:6"
																},
																"nativeSrc": "1477:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:6"
															},
															"nativeSrc": "1477:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:6"
																},
																"nativeSrc": "1501:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:6"
															},
															"nativeSrc": "1501:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:6"
											},
											{
												"body": {
													"nativeSrc": "1579:269:6",
													"nodeType": "YulBlock",
													"src": "1579:269:6",
													"statements": [
														{
															"nativeSrc": "1589:22:6",
															"nodeType": "YulAssignment",
															"src": "1589:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:6"
																},
																"nativeSrc": "1599:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:6"
																}
															]
														},
														{
															"nativeSrc": "1620:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:6"
																},
																"nativeSrc": "1646:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:6",
																"nodeType": "YulBlock",
																"src": "1697:51:6",
																"statements": [
																	{
																		"nativeSrc": "1711:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:6"
																			},
																			"nativeSrc": "1721:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:6"
																},
																"nativeSrc": "1670:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:6"
															},
															"nativeSrc": "1667:81:6",
															"nodeType": "YulIf",
															"src": "1667:81:6"
														},
														{
															"body": {
																"nativeSrc": "1800:42:6",
																"nodeType": "YulBlock",
																"src": "1800:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:6"
																			},
																			"nativeSrc": "1814:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:6"
																		},
																		"nativeSrc": "1814:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:6"
																		},
																		"nativeSrc": "1784:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:6"
																},
																"nativeSrc": "1761:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:6"
															},
															"nativeSrc": "1758:84:6",
															"nodeType": "YulIf",
															"src": "1758:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:6",
														"nodeType": "YulTypedName",
														"src": "1563:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:6",
														"nodeType": "YulTypedName",
														"src": "1572:6:6",
														"type": ""
													}
												],
												"src": "1528:320:6"
											},
											{
												"body": {
													"nativeSrc": "1908:87:6",
													"nodeType": "YulBlock",
													"src": "1908:87:6",
													"statements": [
														{
															"nativeSrc": "1918:11:6",
															"nodeType": "YulAssignment",
															"src": "1918:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:6",
																"nodeType": "YulIdentifier",
																"src": "1926:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:6"
																},
																"nativeSrc": "1939:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:6"
															},
															"nativeSrc": "1939:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:6"
														},
														{
															"nativeSrc": "1962:26:6",
															"nodeType": "YulAssignment",
															"src": "1962:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:6"
																},
																"nativeSrc": "1970:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:6",
														"nodeType": "YulTypedName",
														"src": "1895:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:6",
														"nodeType": "YulTypedName",
														"src": "1903:4:6",
														"type": ""
													}
												],
												"src": "1854:141:6"
											},
											{
												"body": {
													"nativeSrc": "2045:49:6",
													"nodeType": "YulBlock",
													"src": "2045:49:6",
													"statements": [
														{
															"nativeSrc": "2055:33:6",
															"nodeType": "YulAssignment",
															"src": "2055:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:6"
																		},
																		"nativeSrc": "2069:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:6"
																},
																"nativeSrc": "2065:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:6",
														"nodeType": "YulTypedName",
														"src": "2028:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:6",
														"nodeType": "YulTypedName",
														"src": "2038:6:6",
														"type": ""
													}
												],
												"src": "2001:93:6"
											},
											{
												"body": {
													"nativeSrc": "2153:54:6",
													"nodeType": "YulBlock",
													"src": "2153:54:6",
													"statements": [
														{
															"nativeSrc": "2163:37:6",
															"nodeType": "YulAssignment",
															"src": "2163:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:6"
																},
																"nativeSrc": "2184:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:6",
														"nodeType": "YulTypedName",
														"src": "2128:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:6",
														"nodeType": "YulTypedName",
														"src": "2134:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:6",
														"nodeType": "YulTypedName",
														"src": "2144:8:6",
														"type": ""
													}
												],
												"src": "2100:107:6"
											},
											{
												"body": {
													"nativeSrc": "2289:317:6",
													"nodeType": "YulBlock",
													"src": "2289:317:6",
													"statements": [
														{
															"nativeSrc": "2299:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:6"
																},
																"nativeSrc": "2316:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:6",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:6"
																},
																"nativeSrc": "2355:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:6",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:6",
															"nodeType": "YulAssignment",
															"src": "2461:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:6"
																},
																"nativeSrc": "2473:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:6"
																}
															]
														},
														{
															"nativeSrc": "2521:30:6",
															"nodeType": "YulAssignment",
															"src": "2521:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:6"
																		},
																		"nativeSrc": "2541:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:6"
																},
																"nativeSrc": "2530:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:6"
																}
															]
														},
														{
															"nativeSrc": "2560:40:6",
															"nodeType": "YulAssignment",
															"src": "2560:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:6"
																		},
																		"nativeSrc": "2580:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:6"
																},
																"nativeSrc": "2570:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:6",
														"nodeType": "YulTypedName",
														"src": "2250:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:6",
														"nodeType": "YulTypedName",
														"src": "2257:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:6",
														"nodeType": "YulTypedName",
														"src": "2269:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:6",
														"nodeType": "YulTypedName",
														"src": "2282:6:6",
														"type": ""
													}
												],
												"src": "2213:393:6"
											},
											{
												"body": {
													"nativeSrc": "2644:28:6",
													"nodeType": "YulBlock",
													"src": "2644:28:6",
													"statements": [
														{
															"nativeSrc": "2654:12:6",
															"nodeType": "YulAssignment",
															"src": "2654:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:6",
																"nodeType": "YulIdentifier",
																"src": "2661:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:6",
														"nodeType": "YulTypedName",
														"src": "2630:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:6",
														"nodeType": "YulTypedName",
														"src": "2640:3:6",
														"type": ""
													}
												],
												"src": "2612:60:6"
											},
											{
												"body": {
													"nativeSrc": "2738:82:6",
													"nodeType": "YulBlock",
													"src": "2738:82:6",
													"statements": [
														{
															"nativeSrc": "2748:66:6",
															"nodeType": "YulAssignment",
															"src": "2748:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:6"
																				},
																				"nativeSrc": "2788:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:6"
																		},
																		"nativeSrc": "2779:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:6"
																},
																"nativeSrc": "2761:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:6",
														"nodeType": "YulTypedName",
														"src": "2718:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:6",
														"nodeType": "YulTypedName",
														"src": "2728:9:6",
														"type": ""
													}
												],
												"src": "2678:142:6"
											},
											{
												"body": {
													"nativeSrc": "2873:28:6",
													"nodeType": "YulBlock",
													"src": "2873:28:6",
													"statements": [
														{
															"nativeSrc": "2883:12:6",
															"nodeType": "YulAssignment",
															"src": "2883:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:6",
																"nodeType": "YulIdentifier",
																"src": "2890:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:6",
														"nodeType": "YulTypedName",
														"src": "2859:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:6",
														"nodeType": "YulTypedName",
														"src": "2869:3:6",
														"type": ""
													}
												],
												"src": "2826:75:6"
											},
											{
												"body": {
													"nativeSrc": "2983:193:6",
													"nodeType": "YulBlock",
													"src": "2983:193:6",
													"statements": [
														{
															"nativeSrc": "2993:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:6"
																},
																"nativeSrc": "3017:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:6"
																				},
																				"nativeSrc": "3106:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:6"
																				},
																				"nativeSrc": "3127:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:6"
																		},
																		"nativeSrc": "3078:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:6"
																},
																"nativeSrc": "3065:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:6"
															},
															"nativeSrc": "3065:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:6",
														"nodeType": "YulTypedName",
														"src": "2960:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:6",
														"nodeType": "YulTypedName",
														"src": "2966:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:6",
														"nodeType": "YulTypedName",
														"src": "2974:7:6",
														"type": ""
													}
												],
												"src": "2907:269:6"
											},
											{
												"body": {
													"nativeSrc": "3231:24:6",
													"nodeType": "YulBlock",
													"src": "3231:24:6",
													"statements": [
														{
															"nativeSrc": "3241:8:6",
															"nodeType": "YulAssignment",
															"src": "3241:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:6",
																"nodeType": "YulLiteral",
																"src": "3248:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:6",
														"nodeType": "YulTypedName",
														"src": "3227:3:6",
														"type": ""
													}
												],
												"src": "3182:73:6"
											},
											{
												"body": {
													"nativeSrc": "3314:136:6",
													"nodeType": "YulBlock",
													"src": "3314:136:6",
													"statements": [
														{
															"nativeSrc": "3324:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:6"
																},
																"nativeSrc": "3338:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:6"
																},
																"nativeSrc": "3379:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:6"
															},
															"nativeSrc": "3379:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:6",
														"nodeType": "YulTypedName",
														"src": "3300:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:6",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"src": "3261:189:6"
											},
											{
												"body": {
													"nativeSrc": "3506:136:6",
													"nodeType": "YulBlock",
													"src": "3506:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:6",
																"nodeType": "YulBlock",
																"src": "3573:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:6"
																			},
																			"nativeSrc": "3587:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:6"
																		},
																		"nativeSrc": "3587:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:6"
																},
																"nativeSrc": "3523:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:6"
															},
															"nativeSrc": "3516:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:6",
																"nodeType": "YulBlock",
																"src": "3538:26:6",
																"statements": [
																	{
																		"nativeSrc": "3540:22:6",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:6"
																			},
																			"nativeSrc": "3549:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:6",
																"nodeType": "YulBlock",
																"src": "3520:2:6",
																"statements": []
															},
															"src": "3516:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:6",
														"nodeType": "YulTypedName",
														"src": "3494:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:6",
														"nodeType": "YulTypedName",
														"src": "3501:3:6",
														"type": ""
													}
												],
												"src": "3456:186:6"
											},
											{
												"body": {
													"nativeSrc": "3727:464:6",
													"nodeType": "YulBlock",
													"src": "3727:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:6",
																"nodeType": "YulBlock",
																"src": "3753:431:6",
																"statements": [
																	{
																		"nativeSrc": "3767:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:6"
																			},
																			"nativeSrc": "3783:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:6",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:6"
																					},
																					"nativeSrc": "3867:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:6"
																			},
																			"nativeSrc": "3853:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:6",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:6",
																			"nodeType": "YulBlock",
																			"src": "4054:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:6"
																			},
																			"nativeSrc": "4035:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:6"
																		},
																		"nativeSrc": "4032:49:6",
																		"nodeType": "YulIf",
																		"src": "4032:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:6"
																							},
																							"nativeSrc": "4150:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:6"
																					},
																					"nativeSrc": "4136:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:6"
																			},
																			"nativeSrc": "4094:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:6"
																		},
																		"nativeSrc": "4094:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:6"
																},
																"nativeSrc": "3741:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:6"
															},
															"nativeSrc": "3738:446:6",
															"nodeType": "YulIf",
															"src": "3738:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:6",
														"nodeType": "YulTypedName",
														"src": "3703:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:6",
														"nodeType": "YulTypedName",
														"src": "3710:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:6",
														"nodeType": "YulTypedName",
														"src": "3715:10:6",
														"type": ""
													}
												],
												"src": "3648:543:6"
											},
											{
												"body": {
													"nativeSrc": "4260:54:6",
													"nodeType": "YulBlock",
													"src": "4260:54:6",
													"statements": [
														{
															"nativeSrc": "4270:37:6",
															"nodeType": "YulAssignment",
															"src": "4270:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:6"
																},
																"nativeSrc": "4291:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:6",
														"nodeType": "YulTypedName",
														"src": "4235:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:6",
														"nodeType": "YulTypedName",
														"src": "4241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:6",
														"nodeType": "YulTypedName",
														"src": "4251:8:6",
														"type": ""
													}
												],
												"src": "4197:117:6"
											},
											{
												"body": {
													"nativeSrc": "4371:118:6",
													"nodeType": "YulBlock",
													"src": "4371:118:6",
													"statements": [
														{
															"nativeSrc": "4381:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:6"
																				},
																				"nativeSrc": "4426:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:6"
																				},
																				"nativeSrc": "4441:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:6"
																		},
																		"nativeSrc": "4397:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:6"
																},
																"nativeSrc": "4393:56:6",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:6",
															"nodeType": "YulAssignment",
															"src": "4458:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:6"
																},
																"nativeSrc": "4468:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:6",
														"nodeType": "YulTypedName",
														"src": "4348:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:6",
														"nodeType": "YulTypedName",
														"src": "4354:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:6",
														"nodeType": "YulTypedName",
														"src": "4364:6:6",
														"type": ""
													}
												],
												"src": "4320:169:6"
											},
											{
												"body": {
													"nativeSrc": "4575:214:6",
													"nodeType": "YulBlock",
													"src": "4575:214:6",
													"statements": [
														{
															"nativeSrc": "4708:37:6",
															"nodeType": "YulAssignment",
															"src": "4708:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:6"
																},
																"nativeSrc": "4716:29:6",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:6"
																}
															]
														},
														{
															"nativeSrc": "4754:29:6",
															"nodeType": "YulAssignment",
															"src": "4754:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:6"
																		},
																		"nativeSrc": "4771:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:6"
																},
																"nativeSrc": "4762:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:6",
														"nodeType": "YulTypedName",
														"src": "4556:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:6",
														"nodeType": "YulTypedName",
														"src": "4562:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:6",
														"nodeType": "YulTypedName",
														"src": "4570:4:6",
														"type": ""
													}
												],
												"src": "4494:295:6"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:6",
													"nodeType": "YulBlock",
													"src": "4886:1303:6",
													"statements": [
														{
															"nativeSrc": "4897:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:6"
																},
																"nativeSrc": "4911:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:6",
																"nodeType": "YulBlock",
																"src": "5033:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:6"
																			},
																			"nativeSrc": "5035:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:6"
																		},
																		"nativeSrc": "5035:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:6"
																},
																"nativeSrc": "5002:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:6"
															},
															"nativeSrc": "4999:56:6",
															"nodeType": "YulIf",
															"src": "4999:56:6"
														},
														{
															"nativeSrc": "5065:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:6"
																		},
																		"nativeSrc": "5105:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:6"
																},
																"nativeSrc": "5079:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:6"
																},
																"nativeSrc": "5164:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:6"
															},
															"nativeSrc": "5164:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:6"
														},
														{
															"nativeSrc": "5241:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:6",
																"nodeType": "YulLiteral",
																"src": "5258:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:6",
															"nodeType": "YulAssignment",
															"src": "5269:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:6",
																"nodeType": "YulLiteral",
																"src": "5282:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:6",
																		"nodeType": "YulBlock",
																		"src": "5333:611:6",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:6",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:6"
																							},
																							"nativeSrc": "5374:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:6"
																					},
																					"nativeSrc": "5362:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:6",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:6"
																					},
																					"nativeSrc": "5412:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:6",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:6",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:6",
																					"nodeType": "YulBlock",
																					"src": "5530:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:6"
																												},
																												"nativeSrc": "5569:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:6"
																										},
																										"nativeSrc": "5563:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:6"
																								},
																								"nativeSrc": "5548:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:6"
																							},
																							"nativeSrc": "5548:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:6"
																						},
																						{
																							"nativeSrc": "5607:24:6",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:6",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:6"
																								},
																								"nativeSrc": "5617:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:6",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:6",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:6"
																								},
																								"nativeSrc": "5661:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:6"
																					},
																					"nativeSrc": "5493:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:6"
																				},
																				"nativeSrc": "5485:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:6",
																					"nodeType": "YulBlock",
																					"src": "5508:21:6",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:6",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:6",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:6"
																								},
																								"nativeSrc": "5515:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:6",
																					"nodeType": "YulBlock",
																					"src": "5489:3:6",
																					"statements": []
																				},
																				"src": "5485:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:6",
																					"nodeType": "YulBlock",
																					"src": "5729:156:6",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:6"
																										},
																										"nativeSrc": "5770:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:6"
																								},
																								"nativeSrc": "5764:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:6",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:6",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:6"
																												},
																												"nativeSrc": "5852:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:6"
																										},
																										"nativeSrc": "5822:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:6"
																								},
																								"nativeSrc": "5807:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:6"
																							},
																							"nativeSrc": "5807:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:6"
																					},
																					"nativeSrc": "5709:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:6"
																				},
																				"nativeSrc": "5706:179:6",
																				"nodeType": "YulIf",
																				"src": "5706:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:6",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:6"
																									},
																									"nativeSrc": "5915:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:6",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:6"
																							},
																							"nativeSrc": "5911:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:6"
																					},
																					"nativeSrc": "5898:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:6"
																				},
																				"nativeSrc": "5898:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:6"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:6",
																	"nodeType": "YulCase",
																	"src": "5326:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:6",
																		"nodeType": "YulBlock",
																		"src": "5961:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:6",
																					"nodeType": "YulBlock",
																					"src": "6012:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:6"
																										},
																										"nativeSrc": "6045:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:6"
																								},
																								"nativeSrc": "6039:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:6"
																				},
																				"nativeSrc": "6002:77:6",
																				"nodeType": "YulIf",
																				"src": "6002:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:6"
																							},
																							"nativeSrc": "6105:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:6"
																					},
																					"nativeSrc": "6092:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:6"
																				},
																				"nativeSrc": "6092:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:6"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:6",
																	"nodeType": "YulCase",
																	"src": "5953:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:6"
																},
																"nativeSrc": "5303:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:6"
															},
															"nativeSrc": "5296:887:6",
															"nodeType": "YulSwitch",
															"src": "5296:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:6",
														"nodeType": "YulTypedName",
														"src": "4875:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:6",
														"nodeType": "YulTypedName",
														"src": "4881:3:6",
														"type": ""
													}
												],
												"src": "4794:1395:6"
											},
											{
												"body": {
													"nativeSrc": "6223:152:6",
													"nodeType": "YulBlock",
													"src": "6223:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6240:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6243:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6233:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6233:6:6"
																},
																"nativeSrc": "6233:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6233:88:6"
															},
															"nativeSrc": "6233:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6233:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6337:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6340:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:6"
																},
																"nativeSrc": "6330:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6330:15:6"
															},
															"nativeSrc": "6330:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6330:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6361:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6361:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6364:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6364:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6354:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:6"
																},
																"nativeSrc": "6354:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6354:15:6"
															},
															"nativeSrc": "6354:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6354:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6195:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6195:180:6"
											},
											{
												"body": {
													"nativeSrc": "6432:51:6",
													"nodeType": "YulBlock",
													"src": "6432:51:6",
													"statements": [
														{
															"nativeSrc": "6442:34:6",
															"nodeType": "YulAssignment",
															"src": "6442:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6467:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6467:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6470:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6470:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6463:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6463:3:6"
																},
																"nativeSrc": "6463:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6463:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6442:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6442:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6381:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6413:5:6",
														"nodeType": "YulTypedName",
														"src": "6413:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6423:8:6",
														"nodeType": "YulTypedName",
														"src": "6423:8:6",
														"type": ""
													}
												],
												"src": "6381:102:6"
											},
											{
												"body": {
													"nativeSrc": "6562:775:6",
													"nodeType": "YulBlock",
													"src": "6562:775:6",
													"statements": [
														{
															"nativeSrc": "6572:15:6",
															"nodeType": "YulAssignment",
															"src": "6572:15:6",
															"value": {
																"name": "_power",
																"nativeSrc": "6581:6:6",
																"nodeType": "YulIdentifier",
																"src": "6581:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6572:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6572:5:6"
																}
															]
														},
														{
															"nativeSrc": "6596:14:6",
															"nodeType": "YulAssignment",
															"src": "6596:14:6",
															"value": {
																"name": "_base",
																"nativeSrc": "6605:5:6",
																"nodeType": "YulIdentifier",
																"src": "6605:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6596:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6596:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6654:677:6",
																"nodeType": "YulBlock",
																"src": "6654:677:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6742:22:6",
																			"nodeType": "YulBlock",
																			"src": "6742:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6744:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "6744:16:6"
																						},
																						"nativeSrc": "6744:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6744:18:6"
																					},
																					"nativeSrc": "6744:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "6744:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6720:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "6720:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6730:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6730:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6735:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6735:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6726:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6726:3:6"
																					},
																					"nativeSrc": "6726:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6726:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6717:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6717:2:6"
																			},
																			"nativeSrc": "6717:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6717:24:6"
																		},
																		"nativeSrc": "6714:50:6",
																		"nodeType": "YulIf",
																		"src": "6714:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "6809:419:6",
																			"nodeType": "YulBlock",
																			"src": "6809:419:6",
																			"statements": [
																				{
																					"nativeSrc": "7189:25:6",
																					"nodeType": "YulAssignment",
																					"src": "7189:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7202:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "7202:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7209:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "7209:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7198:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7198:3:6"
																						},
																						"nativeSrc": "7198:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7198:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7189:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "7189:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6784:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6784:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6794:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6794:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6780:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6780:3:6"
																			},
																			"nativeSrc": "6780:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6780:16:6"
																		},
																		"nativeSrc": "6777:451:6",
																		"nodeType": "YulIf",
																		"src": "6777:451:6"
																	},
																	{
																		"nativeSrc": "7241:23:6",
																		"nodeType": "YulAssignment",
																		"src": "7241:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7253:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "7253:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7259:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "7259:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7249:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7249:3:6"
																			},
																			"nativeSrc": "7249:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7249:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7241:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7241:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7277:44:6",
																		"nodeType": "YulAssignment",
																		"src": "7277:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7312:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "7312:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7289:22:6",
																				"nodeType": "YulIdentifier",
																				"src": "7289:22:6"
																			},
																			"nativeSrc": "7289:32:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7289:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7277:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "7277:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6630:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "6630:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6640:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6640:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6627:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6627:2:6"
																},
																"nativeSrc": "6627:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6627:15:6"
															},
															"nativeSrc": "6619:712:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6643:2:6",
																"nodeType": "YulBlock",
																"src": "6643:2:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6623:3:6",
																"nodeType": "YulBlock",
																"src": "6623:3:6",
																"statements": []
															},
															"src": "6619:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6489:848:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6517:6:6",
														"nodeType": "YulTypedName",
														"src": "6517:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6525:5:6",
														"nodeType": "YulTypedName",
														"src": "6525:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6532:8:6",
														"nodeType": "YulTypedName",
														"src": "6532:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6542:3:6",
														"nodeType": "YulTypedName",
														"src": "6542:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6550:5:6",
														"nodeType": "YulTypedName",
														"src": "6550:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6557:4:6",
														"nodeType": "YulTypedName",
														"src": "6557:4:6",
														"type": ""
													}
												],
												"src": "6489:848:6"
											},
											{
												"body": {
													"nativeSrc": "7403:1013:6",
													"nodeType": "YulBlock",
													"src": "7403:1013:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7598:20:6",
																"nodeType": "YulBlock",
																"src": "7598:20:6",
																"statements": [
																	{
																		"nativeSrc": "7600:10:6",
																		"nodeType": "YulAssignment",
																		"src": "7600:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7609:1:6",
																			"nodeType": "YulLiteral",
																			"src": "7609:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7600:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7600:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7611:5:6",
																		"nodeType": "YulLeave",
																		"src": "7611:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7588:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "7588:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7581:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:6"
																},
																"nativeSrc": "7581:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7581:16:6"
															},
															"nativeSrc": "7578:40:6",
															"nodeType": "YulIf",
															"src": "7578:40:6"
														},
														{
															"body": {
																"nativeSrc": "7643:20:6",
																"nodeType": "YulBlock",
																"src": "7643:20:6",
																"statements": [
																	{
																		"nativeSrc": "7645:10:6",
																		"nodeType": "YulAssignment",
																		"src": "7645:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7654:1:6",
																			"nodeType": "YulLiteral",
																			"src": "7654:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7645:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7645:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7656:5:6",
																		"nodeType": "YulLeave",
																		"src": "7656:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7637:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7637:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7630:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:6"
																},
																"nativeSrc": "7630:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7630:12:6"
															},
															"nativeSrc": "7627:36:6",
															"nodeType": "YulIf",
															"src": "7627:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7773:20:6",
																		"nodeType": "YulBlock",
																		"src": "7773:20:6",
																		"statements": [
																			{
																				"nativeSrc": "7775:10:6",
																				"nodeType": "YulAssignment",
																				"src": "7775:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7784:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7784:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7775:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7775:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7786:5:6",
																				"nodeType": "YulLeave",
																				"src": "7786:5:6"
																			}
																		]
																	},
																	"nativeSrc": "7766:27:6",
																	"nodeType": "YulCase",
																	"src": "7766:27:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7771:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7771:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7817:176:6",
																		"nodeType": "YulBlock",
																		"src": "7817:176:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7852:22:6",
																					"nodeType": "YulBlock",
																					"src": "7852:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7854:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "7854:16:6"
																								},
																								"nativeSrc": "7854:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7854:18:6"
																							},
																							"nativeSrc": "7854:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7854:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7837:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7837:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7847:3:6",
																							"nodeType": "YulLiteral",
																							"src": "7847:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7834:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7834:2:6"
																					},
																					"nativeSrc": "7834:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7834:17:6"
																				},
																				"nativeSrc": "7831:43:6",
																				"nodeType": "YulIf",
																				"src": "7831:43:6"
																			},
																			{
																				"nativeSrc": "7887:25:6",
																				"nodeType": "YulAssignment",
																				"src": "7887:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7900:1:6",
																							"nodeType": "YulLiteral",
																							"src": "7900:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "7903:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7903:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "7896:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7896:3:6"
																					},
																					"nativeSrc": "7896:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7896:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7887:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7887:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7943:22:6",
																					"nodeType": "YulBlock",
																					"src": "7943:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7945:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "7945:16:6"
																								},
																								"nativeSrc": "7945:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7945:18:6"
																							},
																							"nativeSrc": "7945:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "7945:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "7931:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:6"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "7938:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7938:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7928:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7928:2:6"
																					},
																					"nativeSrc": "7928:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7928:14:6"
																				},
																				"nativeSrc": "7925:40:6",
																				"nodeType": "YulIf",
																				"src": "7925:40:6"
																			},
																			{
																				"nativeSrc": "7978:5:6",
																				"nodeType": "YulLeave",
																				"src": "7978:5:6"
																			}
																		]
																	},
																	"nativeSrc": "7802:191:6",
																	"nodeType": "YulCase",
																	"src": "7802:191:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7807:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7807:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7723:4:6",
																"nodeType": "YulIdentifier",
																"src": "7723:4:6"
															},
															"nativeSrc": "7716:277:6",
															"nodeType": "YulSwitch",
															"src": "7716:277:6"
														},
														{
															"body": {
																"nativeSrc": "8125:123:6",
																"nodeType": "YulBlock",
																"src": "8125:123:6",
																"statements": [
																	{
																		"nativeSrc": "8139:28:6",
																		"nodeType": "YulAssignment",
																		"src": "8139:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8152:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "8152:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8158:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "8158:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8148:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8148:3:6"
																			},
																			"nativeSrc": "8148:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8148:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8139:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8139:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8198:22:6",
																			"nodeType": "YulBlock",
																			"src": "8198:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8200:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "8200:16:6"
																						},
																						"nativeSrc": "8200:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8200:18:6"
																					},
																					"nativeSrc": "8200:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "8200:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8186:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "8186:5:6"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8193:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8193:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8183:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "8183:2:6"
																			},
																			"nativeSrc": "8183:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8183:14:6"
																		},
																		"nativeSrc": "8180:40:6",
																		"nodeType": "YulIf",
																		"src": "8180:40:6"
																	},
																	{
																		"nativeSrc": "8233:5:6",
																		"nodeType": "YulLeave",
																		"src": "8233:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8028:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "8028:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8034:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8034:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8025:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8025:2:6"
																				},
																				"nativeSrc": "8025:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8025:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8042:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "8042:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8052:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8052:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8039:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8039:2:6"
																				},
																				"nativeSrc": "8039:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8039:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8021:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:6"
																		},
																		"nativeSrc": "8021:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8021:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8077:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "8077:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8083:3:6",
																						"nodeType": "YulLiteral",
																						"src": "8083:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8074:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8074:2:6"
																				},
																				"nativeSrc": "8074:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8074:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8092:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "8092:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8102:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8102:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8089:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8089:2:6"
																				},
																				"nativeSrc": "8089:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8089:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8070:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:6"
																		},
																		"nativeSrc": "8070:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8070:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8005:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8005:2:6"
																},
																"nativeSrc": "8005:111:6",
																"nodeType": "YulFunctionCall",
																"src": "8005:111:6"
															},
															"nativeSrc": "8002:246:6",
															"nodeType": "YulIf",
															"src": "8002:246:6"
														},
														{
															"nativeSrc": "8258:57:6",
															"nodeType": "YulAssignment",
															"src": "8258:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8292:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8295:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8295:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8301:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "8301:8:6"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8311:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8311:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8273:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "8273:18:6"
																},
																"nativeSrc": "8273:42:6",
																"nodeType": "YulFunctionCall",
																"src": "8273:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8258:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8258:5:6"
																},
																{
																	"name": "base",
																	"nativeSrc": "8265:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8265:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8354:22:6",
																"nodeType": "YulBlock",
																"src": "8354:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8356:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8356:16:6"
																			},
																			"nativeSrc": "8356:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8356:18:6"
																		},
																		"nativeSrc": "8356:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8356:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8331:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8331:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8342:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8342:3:6"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8347:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8347:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8338:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:6"
																		},
																		"nativeSrc": "8338:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8338:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8328:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8328:2:6"
																},
																"nativeSrc": "8328:25:6",
																"nodeType": "YulFunctionCall",
																"src": "8328:25:6"
															},
															"nativeSrc": "8325:51:6",
															"nodeType": "YulIf",
															"src": "8325:51:6"
														},
														{
															"nativeSrc": "8385:25:6",
															"nodeType": "YulAssignment",
															"src": "8385:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8398:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8398:5:6"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8405:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8405:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8394:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8394:3:6"
																},
																"nativeSrc": "8394:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8394:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8385:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8385:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7343:1073:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7373:4:6",
														"nodeType": "YulTypedName",
														"src": "7373:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7379:8:6",
														"nodeType": "YulTypedName",
														"src": "7379:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7389:3:6",
														"nodeType": "YulTypedName",
														"src": "7389:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7397:5:6",
														"nodeType": "YulTypedName",
														"src": "7397:5:6",
														"type": ""
													}
												],
												"src": "7343:1073:6"
											},
											{
												"body": {
													"nativeSrc": "8465:43:6",
													"nodeType": "YulBlock",
													"src": "8465:43:6",
													"statements": [
														{
															"nativeSrc": "8475:27:6",
															"nodeType": "YulAssignment",
															"src": "8475:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8490:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8490:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8497:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8497:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8486:3:6"
																},
																"nativeSrc": "8486:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8486:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8475:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8475:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8422:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8447:5:6",
														"nodeType": "YulTypedName",
														"src": "8447:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8457:7:6",
														"nodeType": "YulTypedName",
														"src": "8457:7:6",
														"type": ""
													}
												],
												"src": "8422:86:6"
											},
											{
												"body": {
													"nativeSrc": "8578:217:6",
													"nodeType": "YulBlock",
													"src": "8578:217:6",
													"statements": [
														{
															"nativeSrc": "8588:31:6",
															"nodeType": "YulAssignment",
															"src": "8588:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8614:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8614:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8596:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8596:17:6"
																},
																"nativeSrc": "8596:23:6",
																"nodeType": "YulFunctionCall",
																"src": "8596:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8588:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8588:4:6"
																}
															]
														},
														{
															"nativeSrc": "8628:37:6",
															"nodeType": "YulAssignment",
															"src": "8628:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8656:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "8656:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8640:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "8640:15:6"
																},
																"nativeSrc": "8640:25:6",
																"nodeType": "YulFunctionCall",
																"src": "8640:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8628:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "8628:8:6"
																}
															]
														},
														{
															"nativeSrc": "8675:113:6",
															"nodeType": "YulAssignment",
															"src": "8675:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8705:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8705:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8711:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "8711:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8721:66:6",
																		"nodeType": "YulLiteral",
																		"src": "8721:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8684:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "8684:20:6"
																},
																"nativeSrc": "8684:104:6",
																"nodeType": "YulFunctionCall",
																"src": "8684:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8675:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8675:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8514:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8553:4:6",
														"nodeType": "YulTypedName",
														"src": "8553:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8559:8:6",
														"nodeType": "YulTypedName",
														"src": "8559:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8572:5:6",
														"nodeType": "YulTypedName",
														"src": "8572:5:6",
														"type": ""
													}
												],
												"src": "8514:281:6"
											},
											{
												"body": {
													"nativeSrc": "8849:362:6",
													"nodeType": "YulBlock",
													"src": "8849:362:6",
													"statements": [
														{
															"nativeSrc": "8859:25:6",
															"nodeType": "YulAssignment",
															"src": "8859:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8882:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8882:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8864:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8864:17:6"
																},
																"nativeSrc": "8864:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8864:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8859:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8859:1:6"
																}
															]
														},
														{
															"nativeSrc": "8893:25:6",
															"nodeType": "YulAssignment",
															"src": "8893:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8916:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8898:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8898:17:6"
																},
																"nativeSrc": "8898:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8898:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8893:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8893:1:6"
																}
															]
														},
														{
															"nativeSrc": "8927:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8927:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8950:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8950:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8946:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8946:3:6"
																},
																"nativeSrc": "8946:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8946:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8931:11:6",
																	"nodeType": "YulTypedName",
																	"src": "8931:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8964:41:6",
															"nodeType": "YulAssignment",
															"src": "8964:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8993:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "8993:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8975:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8975:17:6"
																},
																"nativeSrc": "8975:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8975:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8964:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9182:22:6",
																"nodeType": "YulBlock",
																"src": "9182:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9184:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9184:16:6"
																			},
																			"nativeSrc": "9184:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9184:18:6"
																		},
																		"nativeSrc": "9184:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9184:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9115:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9115:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9108:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9108:6:6"
																				},
																				"nativeSrc": "9108:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9108:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9138:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9138:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9145:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "9145:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9154:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "9154:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9141:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9141:3:6"
																						},
																						"nativeSrc": "9141:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9141:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9135:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "9135:2:6"
																				},
																				"nativeSrc": "9135:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9135:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9088:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9088:2:6"
																		},
																		"nativeSrc": "9088:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9088:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9068:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:6"
																},
																"nativeSrc": "9068:113:6",
																"nodeType": "YulFunctionCall",
																"src": "9068:113:6"
															},
															"nativeSrc": "9065:139:6",
															"nodeType": "YulIf",
															"src": "9065:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8801:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8832:1:6",
														"nodeType": "YulTypedName",
														"src": "8832:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8835:1:6",
														"nodeType": "YulTypedName",
														"src": "8835:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8841:7:6",
														"nodeType": "YulTypedName",
														"src": "8841:7:6",
														"type": ""
													}
												],
												"src": "8801:410:6"
											},
											{
												"body": {
													"nativeSrc": "9262:81:6",
													"nodeType": "YulBlock",
													"src": "9262:81:6",
													"statements": [
														{
															"nativeSrc": "9272:65:6",
															"nodeType": "YulAssignment",
															"src": "9272:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9287:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9287:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9294:42:6",
																		"nodeType": "YulLiteral",
																		"src": "9294:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9283:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9283:3:6"
																},
																"nativeSrc": "9283:54:6",
																"nodeType": "YulFunctionCall",
																"src": "9283:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9272:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9272:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9217:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9244:5:6",
														"nodeType": "YulTypedName",
														"src": "9244:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9254:7:6",
														"nodeType": "YulTypedName",
														"src": "9254:7:6",
														"type": ""
													}
												],
												"src": "9217:126:6"
											},
											{
												"body": {
													"nativeSrc": "9394:51:6",
													"nodeType": "YulBlock",
													"src": "9394:51:6",
													"statements": [
														{
															"nativeSrc": "9404:35:6",
															"nodeType": "YulAssignment",
															"src": "9404:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9433:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9433:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9415:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9415:17:6"
																},
																"nativeSrc": "9415:24:6",
																"nodeType": "YulFunctionCall",
																"src": "9415:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9404:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9404:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9349:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9376:5:6",
														"nodeType": "YulTypedName",
														"src": "9376:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9386:7:6",
														"nodeType": "YulTypedName",
														"src": "9386:7:6",
														"type": ""
													}
												],
												"src": "9349:96:6"
											},
											{
												"body": {
													"nativeSrc": "9516:53:6",
													"nodeType": "YulBlock",
													"src": "9516:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:6"
																		},
																		"nativeSrc": "9538:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:6"
																},
																"nativeSrc": "9526:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:6"
															},
															"nativeSrc": "9526:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:6",
														"nodeType": "YulTypedName",
														"src": "9504:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:6",
														"nodeType": "YulTypedName",
														"src": "9511:3:6",
														"type": ""
													}
												],
												"src": "9451:118:6"
											},
											{
												"body": {
													"nativeSrc": "9673:124:6",
													"nodeType": "YulBlock",
													"src": "9673:124:6",
													"statements": [
														{
															"nativeSrc": "9683:26:6",
															"nodeType": "YulAssignment",
															"src": "9683:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:6"
																},
																"nativeSrc": "9691:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:6"
																		},
																		"nativeSrc": "9772:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:6"
																},
																"nativeSrc": "9719:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:6"
															},
															"nativeSrc": "9719:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:6",
														"nodeType": "YulTypedName",
														"src": "9645:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:6",
														"nodeType": "YulTypedName",
														"src": "9657:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:6",
														"nodeType": "YulTypedName",
														"src": "9668:4:6",
														"type": ""
													}
												],
												"src": "9575:222:6"
											},
											{
												"body": {
													"nativeSrc": "9847:147:6",
													"nodeType": "YulBlock",
													"src": "9847:147:6",
													"statements": [
														{
															"nativeSrc": "9857:25:6",
															"nodeType": "YulAssignment",
															"src": "9857:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:6"
																},
																"nativeSrc": "9862:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:6"
																}
															]
														},
														{
															"nativeSrc": "9891:25:6",
															"nodeType": "YulAssignment",
															"src": "9891:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:6"
																},
																"nativeSrc": "9896:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:6"
																}
															]
														},
														{
															"nativeSrc": "9925:16:6",
															"nodeType": "YulAssignment",
															"src": "9925:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:6"
																},
																"nativeSrc": "9932:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:6",
																"nodeType": "YulBlock",
																"src": "9965:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:6"
																			},
																			"nativeSrc": "9967:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:6"
																		},
																		"nativeSrc": "9967:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:6"
																},
																"nativeSrc": "9954:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:6"
															},
															"nativeSrc": "9951:36:6",
															"nodeType": "YulIf",
															"src": "9951:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:6",
														"nodeType": "YulTypedName",
														"src": "9834:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:6",
														"nodeType": "YulTypedName",
														"src": "9837:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:6",
														"nodeType": "YulTypedName",
														"src": "9843:3:6",
														"type": ""
													}
												],
												"src": "9803:191:6"
											},
											{
												"body": {
													"nativeSrc": "10065:53:6",
													"nodeType": "YulBlock",
													"src": "10065:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:6"
																		},
																		"nativeSrc": "10087:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:6"
																},
																"nativeSrc": "10075:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:6"
															},
															"nativeSrc": "10075:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:6",
														"nodeType": "YulTypedName",
														"src": "10053:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:6",
														"nodeType": "YulTypedName",
														"src": "10060:3:6",
														"type": ""
													}
												],
												"src": "10000:118:6"
											},
											{
												"body": {
													"nativeSrc": "10278:288:6",
													"nodeType": "YulBlock",
													"src": "10278:288:6",
													"statements": [
														{
															"nativeSrc": "10288:26:6",
															"nodeType": "YulAssignment",
															"src": "10288:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:6"
																},
																"nativeSrc": "10296:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:6"
																		},
																		"nativeSrc": "10377:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:6"
																},
																"nativeSrc": "10324:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:6"
															},
															"nativeSrc": "10324:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:6"
																		},
																		"nativeSrc": "10458:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:6"
																},
																"nativeSrc": "10405:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:6"
															},
															"nativeSrc": "10405:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:6"
																		},
																		"nativeSrc": "10540:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:6"
																},
																"nativeSrc": "10487:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:6"
															},
															"nativeSrc": "10487:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:6",
														"nodeType": "YulTypedName",
														"src": "10234:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:6",
														"nodeType": "YulTypedName",
														"src": "10246:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:6",
														"nodeType": "YulTypedName",
														"src": "10254:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:6",
														"nodeType": "YulTypedName",
														"src": "10262:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:6",
														"nodeType": "YulTypedName",
														"src": "10273:4:6",
														"type": ""
													}
												],
												"src": "10124:442:6"
											},
											{
												"body": {
													"nativeSrc": "10670:124:6",
													"nodeType": "YulBlock",
													"src": "10670:124:6",
													"statements": [
														{
															"nativeSrc": "10680:26:6",
															"nodeType": "YulAssignment",
															"src": "10680:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:6"
																},
																"nativeSrc": "10688:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:6"
																		},
																		"nativeSrc": "10769:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:6"
																},
																"nativeSrc": "10716:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:6"
															},
															"nativeSrc": "10716:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:6",
														"nodeType": "YulTypedName",
														"src": "10642:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:6",
														"nodeType": "YulTypedName",
														"src": "10654:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:6",
														"nodeType": "YulTypedName",
														"src": "10665:4:6",
														"type": ""
													}
												],
												"src": "10572:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526001600555348015610014575f80fd5b506040516121063803806121068339818101604052810190610036919061043c565b6040518060400160405280600881526020017f4b697075436f696e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4b5043000000000000000000000000000000000000000000000000000000000081525081600390816100b19190610698565b5080600490816100c19190610698565b5050503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061015960065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661013761015f60201b60201c565b600a61014391906108cf565b8361014e9190610919565b61016760201b60201c565b50610a42565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101d7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101ce9190610999565b60405180910390fd5b6101e85f83836101ec60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361023c578060025f82825461023091906109b2565b9250508190555061030a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156102c5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016102bc939291906109f4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610351578060025f828254039250508190555061039b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103f89190610a29565b60405180910390a3505050565b5f80fd5b5f819050919050565b61041b81610409565b8114610425575f80fd5b50565b5f8151905061043681610412565b92915050565b5f6020828403121561045157610450610405565b5b5f61045e84828501610428565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104e257607f821691505b6020821081036104f5576104f461049e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261051c565b610561868361051c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61059c61059761059284610409565b610579565b610409565b9050919050565b5f819050919050565b6105b583610582565b6105c96105c1826105a3565b848454610528565b825550505050565b5f90565b6105dd6105d1565b6105e88184846105ac565b505050565b5b8181101561060b576106005f826105d5565b6001810190506105ee565b5050565b601f82111561065057610621816104fb565b61062a8461050d565b81016020851015610639578190505b61064d6106458561050d565b8301826105ed565b50505b505050565b5f82821c905092915050565b5f6106705f1984600802610655565b1980831691505092915050565b5f6106888383610661565b9150826002028217905092915050565b6106a182610467565b67ffffffffffffffff8111156106ba576106b9610471565b5b6106c482546104cb565b6106cf82828561060f565b5f60209050601f831160018114610700575f84156106ee578287015190505b6106f8858261067d565b86555061075f565b601f19841661070e866104fb565b5f5b8281101561073557848901518255600182019150602085019450602081019050610710565b86831015610752578489015161074e601f891682610661565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156107e9578086048111156107c5576107c4610767565b5b60018516156107d45780820291505b80810290506107e285610794565b94506107a9565b94509492505050565b5f8261080157600190506108bc565b8161080e575f90506108bc565b8160018114610824576002811461082e5761085d565b60019150506108bc565b60ff8411156108405761083f610767565b5b8360020a91508482111561085757610856610767565b5b506108bc565b5060208310610133831016604e8410600b84101617156108925782820a90508381111561088d5761088c610767565b5b6108bc565b61089f84848460016107a0565b925090508184048111156108b6576108b5610767565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6108d982610409565b91506108e4836108c3565b92506109117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107f2565b905092915050565b5f61092382610409565b915061092e83610409565b925082820261093c81610409565b9150828204841483151761095357610952610767565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109838261095a565b9050919050565b61099381610979565b82525050565b5f6020820190506109ac5f83018461098a565b92915050565b5f6109bc82610409565b91506109c783610409565b92508282019050808211156109df576109de610767565b5b92915050565b6109ee81610409565b82525050565b5f606082019050610a075f83018661098a565b610a1460208301856109e5565b610a2160408301846109e5565b949350505050565b5f602082019050610a3c5f8301846109e5565b92915050565b6116b780610a4f5f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80638da5cb5b11610095578063a694fc3a11610064578063a694fc3a146102b0578063a9059cbb146102cc578063d82e3962146102fc578063dd62ed3e1461032c576100fe565b80638da5cb5b146102265780639168ae721461024457806395d89b41146102765780639e447fc614610294576100fe565b80632e17de78116100d15780632e17de781461019e578063313ce567146101ba57806370a08231146101d85780637b0a47ee14610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61035c565b60405161011791906110c7565b60405180910390f35b61013a60048036038101906101359190611178565b6103ec565b60405161014791906111d0565b60405180910390f35b61015861040e565b60405161016591906111f8565b60405180910390f35b61018860048036038101906101839190611211565b610417565b60405161019591906111d0565b60405180910390f35b6101b860048036038101906101b39190611261565b610445565b005b6101c26105d1565b6040516101cf91906112a7565b60405180910390f35b6101f260048036038101906101ed91906112c0565b6105d9565b6040516101ff91906111f8565b60405180910390f35b61021061061e565b60405161021d91906111f8565b60405180910390f35b61022e610624565b60405161023b91906112fa565b60405180910390f35b61025e600480360381019061025991906112c0565b610649565b60405161026d93929190611313565b60405180910390f35b61027e61066f565b60405161028b91906110c7565b60405180910390f35b6102ae60048036038101906102a99190611261565b6106ff565b005b6102ca60048036038101906102c59190611261565b610798565b005b6102e660048036038101906102e19190611178565b610920565b6040516102f391906111d0565b60405180910390f35b610316600480360381019061031191906112c0565b610942565b60405161032391906111f8565b60405180910390f35b61034660048036038101906103419190611348565b6109d3565b60405161035391906111f8565b60405180910390f35b60606003805461036b906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610397906113b3565b80156103e25780601f106103b9576101008083540402835291602001916103e2565b820191905f5260205f20905b8154815290600101906020018083116103c557829003601f168201915b5050505050905090565b5f806103f6610a55565b9050610403818585610a5c565b600191505092915050565b5f600254905090565b5f80610421610a55565b905061042e858285610a6e565b610439858585610b00565b60019150509392505050565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f015410156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c29061142d565b60405180910390fd5b5f6104d533610942565b90505f811115610538576104e93382610bf0565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161052f91906111f8565b60405180910390a25b82825f015f82825461054a9190611478565b92505081905550600554825f015461056291906114ab565b826001018190555042826002018190555061057e303385610b00565b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75846040516105c491906111f8565b60405180910390a2505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055481565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052805f5260405f205f91509050805f0154908060010154908060020154905083565b60606004805461067e906113b3565b80601f01602080910402602001604051908101604052809291908181526020018280546106aa906113b3565b80156106f55780601f106106cc576101008083540402835291602001916106f5565b820191905f5260205f20905b8154815290600101906020018083116106d857829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611536565b60405180910390fd5b8060058190555050565b5f81116107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d19061159e565b60405180910390fd5b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f61082433610942565b90505f811115610887576108383382610bf0565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161087e91906111f8565b60405180910390a25b610892333085610b00565b82825f015f8282546108a491906115bc565b92505081905550428260020181905550600554825f01546108c591906114ab565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8460405161091391906111f8565b60405180910390a2505050565b5f8061092a610a55565b9050610937818585610b00565b600191505092915050565b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160020154426109949190611478565b90505f670de0b6b3a764000082600554855f01546109b291906114ab565b6109bc91906114ab565b6109c6919061161c565b9050809350505050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610a698383836001610c6f565b505050565b5f610a7984846109d3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610afa5781811015610aeb578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ae29392919061164c565b60405180910390fd5b610af984848484035f610c6f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b70575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b6791906112fa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610be0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bd791906112fa565b60405180910390fd5b610beb838383610e3e565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c60575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c5791906112fa565b60405180910390fd5b610c6b5f8383610e3e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cdf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cd691906112fa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d4f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d4691906112fa565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e38578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e2f91906111f8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e8e578060025f828254610e8291906115bc565b92505081905550610f5c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f0e9392919061164c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa3578060025f8282540392505081905550610fed565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161104a91906111f8565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61109982611057565b6110a38185611061565b93506110b3818560208601611071565b6110bc8161107f565b840191505092915050565b5f6020820190508181035f8301526110df818461108f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611114826110eb565b9050919050565b6111248161110a565b811461112e575f80fd5b50565b5f8135905061113f8161111b565b92915050565b5f819050919050565b61115781611145565b8114611161575f80fd5b50565b5f813590506111728161114e565b92915050565b5f806040838503121561118e5761118d6110e7565b5b5f61119b85828601611131565b92505060206111ac85828601611164565b9150509250929050565b5f8115159050919050565b6111ca816111b6565b82525050565b5f6020820190506111e35f8301846111c1565b92915050565b6111f281611145565b82525050565b5f60208201905061120b5f8301846111e9565b92915050565b5f805f60608486031215611228576112276110e7565b5b5f61123586828701611131565b935050602061124686828701611131565b925050604061125786828701611164565b9150509250925092565b5f60208284031215611276576112756110e7565b5b5f61128384828501611164565b91505092915050565b5f60ff82169050919050565b6112a18161128c565b82525050565b5f6020820190506112ba5f830184611298565b92915050565b5f602082840312156112d5576112d46110e7565b5b5f6112e284828501611131565b91505092915050565b6112f48161110a565b82525050565b5f60208201905061130d5f8301846112eb565b92915050565b5f6060820190506113265f8301866111e9565b61133360208301856111e9565b61134060408301846111e9565b949350505050565b5f806040838503121561135e5761135d6110e7565b5b5f61136b85828601611131565b925050602061137c85828601611131565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113ca57607f821691505b6020821081036113dd576113dc611386565b5b50919050565b7f4e6f7420656e6f756768207374616b656420746f6b656e7300000000000000005f82015250565b5f611417601883611061565b9150611422826113e3565b602082019050919050565b5f6020820190508181035f8301526114448161140b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61148282611145565b915061148d83611145565b92508282039050818111156114a5576114a461144b565b5b92915050565b5f6114b582611145565b91506114c083611145565b92508282026114ce81611145565b915082820484148315176114e5576114e461144b565b5b5092915050565b7f4f6e6c79206f776e6572212100000000000000000000000000000000000000005f82015250565b5f611520600c83611061565b915061152b826114ec565b602082019050919050565b5f6020820190508181035f83015261154d81611514565b9050919050565b7f43616e6e6f74207374616b65207a65726f20746f6b656e7300000000000000005f82015250565b5f611588601883611061565b915061159382611554565b602082019050919050565b5f6020820190508181035f8301526115b58161157c565b9050919050565b5f6115c682611145565b91506115d183611145565b92508282019050808211156115e9576115e861144b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61162682611145565b915061163183611145565b925082611641576116406115ef565b5b828204905092915050565b5f60608201905061165f5f8301866112eb565b61166c60208301856111e9565b61167960408301846111e9565b94935050505056fea26469706673582212204e9380e6b77adcc0b3c6ef864f51d289fb0617f4ff4c2dd3e4cf127d3a5ab37764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2106 CODESIZE SUB DUP1 PUSH2 0x2106 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B697075436F696E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B50430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x698 JUMP JUMPDEST POP POP POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x159 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137 PUSH2 0x15F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST DUP4 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x167 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xA42 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E8 PUSH0 DUP4 DUP4 PUSH2 0x1EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x30A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x351 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x39B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41B DUP2 PUSH2 0x409 JUMP JUMPDEST DUP2 EQ PUSH2 0x425 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x436 DUP2 PUSH2 0x412 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x451 JUMPI PUSH2 0x450 PUSH2 0x405 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x45E DUP5 DUP3 DUP6 ADD PUSH2 0x428 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4F5 JUMPI PUSH2 0x4F4 PUSH2 0x49E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x557 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x561 DUP7 DUP4 PUSH2 0x51C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x59C PUSH2 0x597 PUSH2 0x592 DUP5 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B5 DUP4 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x5C1 DUP3 PUSH2 0x5A3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x528 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x5E8 DUP2 DUP5 DUP5 PUSH2 0x5AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x60B JUMPI PUSH2 0x600 PUSH0 DUP3 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x650 JUMPI PUSH2 0x621 DUP2 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x62A DUP5 PUSH2 0x50D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x639 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x64D PUSH2 0x645 DUP6 PUSH2 0x50D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x670 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x655 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x688 DUP4 DUP4 PUSH2 0x661 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A1 DUP3 PUSH2 0x467 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x471 JUMP JUMPDEST JUMPDEST PUSH2 0x6C4 DUP3 SLOAD PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x6CF DUP3 DUP3 DUP6 PUSH2 0x60F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x700 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6EE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6F8 DUP6 DUP3 PUSH2 0x67D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x75F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x70E DUP7 PUSH2 0x4FB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x735 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x710 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x752 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x74E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x661 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x7E9 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x7C5 JUMPI PUSH2 0x7C4 PUSH2 0x767 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x7D4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x7E2 DUP6 PUSH2 0x794 JUMP JUMPDEST SWAP5 POP PUSH2 0x7A9 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x801 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST DUP2 PUSH2 0x80E JUMPI PUSH0 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x82E JUMPI PUSH2 0x85D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x840 JUMPI PUSH2 0x83F PUSH2 0x767 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x857 JUMPI PUSH2 0x856 PUSH2 0x767 JUMP JUMPDEST JUMPDEST POP PUSH2 0x8BC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x892 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH2 0x88C PUSH2 0x767 JUMP JUMPDEST JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x89F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x7A0 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x767 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8D9 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E4 DUP4 PUSH2 0x8C3 JUMP JUMPDEST SWAP3 POP PUSH2 0x911 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x7F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x923 DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP PUSH2 0x92E DUP4 PUSH2 0x409 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x93C DUP2 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x767 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x983 DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x993 DUP2 PUSH2 0x979 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9AC PUSH0 DUP4 ADD DUP5 PUSH2 0x98A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9BC DUP3 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C7 DUP4 PUSH2 0x409 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x767 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9EE DUP2 PUSH2 0x409 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA07 PUSH0 DUP4 ADD DUP7 PUSH2 0x98A JUMP JUMPDEST PUSH2 0xA14 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0xA21 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA3C PUSH0 DUP4 ADD DUP5 PUSH2 0x9E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B7 DUP1 PUSH2 0xA4F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x294 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F6 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH2 0x403 DUP2 DUP6 DUP6 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x421 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP6 DUP3 DUP6 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x439 DUP6 DUP6 DUP6 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4D5 CALLER PUSH2 0x942 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x538 JUMPI PUSH2 0x4E9 CALLER DUP3 PUSH2 0xBF0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x57E ADDRESS CALLER DUP6 PUSH2 0xB00 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x67E SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AA SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP1 PUSH2 0x159E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH2 0x824 CALLER PUSH2 0x942 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x887 JUMPI PUSH2 0x838 CALLER DUP3 PUSH2 0xBF0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x87E SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x892 CALLER ADDRESS DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x92A PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH2 0x937 DUP2 DUP6 DUP6 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x5 SLOAD DUP6 PUSH0 ADD SLOAD PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA69 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA79 DUP5 DUP5 PUSH2 0x9D3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAFA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC6F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB70 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEB DUP4 DUP4 DUP4 PUSH2 0xE3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC60 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC57 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B PUSH0 DUP4 DUP4 PUSH2 0xE3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE38 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF5C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFED JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x104A SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1099 DUP3 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0x10A3 DUP2 DUP6 PUSH2 0x1061 JUMP JUMPDEST SWAP4 POP PUSH2 0x10B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x10BC DUP2 PUSH2 0x107F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10DF DUP2 DUP5 PUSH2 0x108F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1114 DUP3 PUSH2 0x10EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP2 EQ PUSH2 0x112E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113F DUP2 PUSH2 0x111B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1157 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP2 EQ PUSH2 0x1161 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1172 DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118E JUMPI PUSH2 0x118D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x119B DUP6 DUP3 DUP7 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11AC DUP6 DUP3 DUP7 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11F2 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x120B PUSH0 DUP4 ADD DUP5 PUSH2 0x11E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1228 JUMPI PUSH2 0x1227 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1235 DUP7 DUP3 DUP8 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1246 DUP7 DUP3 DUP8 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1257 DUP7 DUP3 DUP8 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1276 JUMPI PUSH2 0x1275 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1283 DUP5 DUP3 DUP6 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A1 DUP2 PUSH2 0x128C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130D PUSH0 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1326 PUSH0 DUP4 ADD DUP7 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x1333 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x1340 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136B DUP6 DUP3 DUP7 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x137C DUP6 DUP3 DUP7 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13DD JUMPI PUSH2 0x13DC PUSH2 0x1386 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B656420746F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1417 PUSH1 0x18 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP2 POP PUSH2 0x1422 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1444 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1482 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x148D DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14B5 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C0 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14CE DUP2 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14E5 JUMPI PUSH2 0x14E4 PUSH2 0x144B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E657221210000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1520 PUSH1 0xC DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP2 POP PUSH2 0x152B DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x154D DUP2 PUSH2 0x1514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65207A65726F20746F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1588 PUSH1 0x18 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP2 POP PUSH2 0x1593 DUP3 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15B5 DUP2 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15C6 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D1 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1626 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1631 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x15EF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x165F PUSH0 DUP4 ADD DUP7 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x166C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x1679 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SWAP4 DUP1 0xE6 0xB7 PUSH27 0xDCC0B3C6EF864F51D289FB0617F4FF4C2DD3E4CF127D3A5AB37764 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "114:3123:5:-:0;;;223:1;195:29;;640:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;794:10:5::1;786:5;;:18;;;;;;;;;;;;;;;;;;814:44;820:5;;;;;;;;;;;847:10;:8;;;:10;;:::i;:::-;843:2;:14;;;;:::i;:::-;827:13;:30;;;;:::i;:::-;814:5;;;:44;;:::i;:::-;640:225:::0;114:3123;;3002:82:1;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:102;6423:8;6470:5;6467:1;6463:13;6442:34;;6381:102;;;:::o;6489:848::-;6550:5;6557:4;6581:6;6572:15;;6605:5;6596:14;;6619:712;6640:1;6630:8;6627:15;6619:712;;;6735:4;6730:3;6726:14;6720:4;6717:24;6714:50;;;6744:18;;:::i;:::-;6714:50;6794:1;6784:8;6780:16;6777:451;;;7209:4;7202:5;7198:16;7189:25;;6777:451;7259:4;7253;7249:15;7241:23;;7289:32;7312:8;7289:32;:::i;:::-;7277:44;;6619:712;;;6489:848;;;;;;;:::o;7343:1073::-;7397:5;7588:8;7578:40;;7609:1;7600:10;;7611:5;;7578:40;7637:4;7627:36;;7654:1;7645:10;;7656:5;;7627:36;7723:4;7771:1;7766:27;;;;7807:1;7802:191;;;;7716:277;;7766:27;7784:1;7775:10;;7786:5;;;7802:191;7847:3;7837:8;7834:17;7831:43;;;7854:18;;:::i;:::-;7831:43;7903:8;7900:1;7896:16;7887:25;;7938:3;7931:5;7928:14;7925:40;;;7945:18;;:::i;:::-;7925:40;7978:5;;;7716:277;;8102:2;8092:8;8089:16;8083:3;8077:4;8074:13;8070:36;8052:2;8042:8;8039:16;8034:2;8028:4;8025:12;8021:35;8005:111;8002:246;;;8158:8;8152:4;8148:19;8139:28;;8193:3;8186:5;8183:14;8180:40;;;8200:18;;:::i;:::-;8180:40;8233:5;;8002:246;8273:42;8311:3;8301:8;8295:4;8292:1;8273:42;:::i;:::-;8258:57;;;;8347:4;8342:3;8338:14;8331:5;8328:25;8325:51;;;8356:18;;:::i;:::-;8325:51;8405:4;8398:5;8394:16;8385:25;;7343:1073;;;;;;:::o;8422:86::-;8457:7;8497:4;8490:5;8486:16;8475:27;;8422:86;;;:::o;8514:281::-;8572:5;8596:23;8614:4;8596:23;:::i;:::-;8588:31;;8640:25;8656:8;8640:25;:::i;:::-;8628:37;;8684:104;8721:66;8711:8;8705:4;8684:104;:::i;:::-;8675:113;;8514:281;;;;:::o;8801:410::-;8841:7;8864:20;8882:1;8864:20;:::i;:::-;8859:25;;8898:20;8916:1;8898:20;:::i;:::-;8893:25;;8953:1;8950;8946:9;8975:30;8993:11;8975:30;:::i;:::-;8964:41;;9154:1;9145:7;9141:15;9138:1;9135:22;9115:1;9108:9;9088:83;9065:139;;9184:18;;:::i;:::-;9065:139;8849:362;8801:410;;;;:::o;9217:126::-;9254:7;9294:42;9287:5;9283:54;9272:65;;9217:126;;;:::o;9349:96::-;9386:7;9415:24;9433:5;9415:24;:::i;:::-;9404:35;;9349:96;;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;114:3123:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 2652,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3183,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 3056,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 2645,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 2670,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 2816,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 3646,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 2515,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1004,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1497,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateReward_1066": {
									"entryPoint": 2370,
									"id": 1066,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1489,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 860,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_795": {
									"entryPoint": 1572,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_793": {
									"entryPoint": 1566,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardRate_1078": {
									"entryPoint": 1791,
									"id": 1078,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_945": {
									"entryPoint": 1944,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakers_807": {
									"entryPoint": 1609,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 1647,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1038,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1047,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2336,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstake_1029": {
									"entryPoint": 1093,
									"id": 1029,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11948:6",
										"nodeType": "YulBlock",
										"src": "0:11948:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4382:263:6",
													"nodeType": "YulBlock",
													"src": "4382:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:6",
																"nodeType": "YulBlock",
																"src": "4428:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:6"
																			},
																			"nativeSrc": "4430:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:6"
																		},
																		"nativeSrc": "4430:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:6"
																		},
																		"nativeSrc": "4399:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:6"
																},
																"nativeSrc": "4395:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:6"
															},
															"nativeSrc": "4392:119:6",
															"nodeType": "YulIf",
															"src": "4392:119:6"
														},
														{
															"nativeSrc": "4521:117:6",
															"nodeType": "YulBlock",
															"src": "4521:117:6",
															"statements": [
																{
																	"nativeSrc": "4536:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:6"
																				},
																				"nativeSrc": "4596:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:6"
																		},
																		"nativeSrc": "4575:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4316:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:6",
														"nodeType": "YulTypedName",
														"src": "4352:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:6",
														"nodeType": "YulTypedName",
														"src": "4363:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:6",
														"nodeType": "YulTypedName",
														"src": "4375:6:6",
														"type": ""
													}
												],
												"src": "4316:329:6"
											},
											{
												"body": {
													"nativeSrc": "4694:43:6",
													"nodeType": "YulBlock",
													"src": "4694:43:6",
													"statements": [
														{
															"nativeSrc": "4704:27:6",
															"nodeType": "YulAssignment",
															"src": "4704:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:6"
																},
																"nativeSrc": "4715:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:6",
														"nodeType": "YulTypedName",
														"src": "4676:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:6",
														"nodeType": "YulTypedName",
														"src": "4686:7:6",
														"type": ""
													}
												],
												"src": "4651:86:6"
											},
											{
												"body": {
													"nativeSrc": "4804:51:6",
													"nodeType": "YulBlock",
													"src": "4804:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:6"
																		},
																		"nativeSrc": "4826:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:6"
																},
																"nativeSrc": "4814:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:6"
															},
															"nativeSrc": "4814:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:6",
														"nodeType": "YulTypedName",
														"src": "4792:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:6",
														"nodeType": "YulTypedName",
														"src": "4799:3:6",
														"type": ""
													}
												],
												"src": "4743:112:6"
											},
											{
												"body": {
													"nativeSrc": "4955:120:6",
													"nodeType": "YulBlock",
													"src": "4955:120:6",
													"statements": [
														{
															"nativeSrc": "4965:26:6",
															"nodeType": "YulAssignment",
															"src": "4965:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:6"
																},
																"nativeSrc": "4973:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:6"
																		},
																		"nativeSrc": "5050:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:6"
																},
																"nativeSrc": "5001:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:6"
															},
															"nativeSrc": "5001:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:6",
														"nodeType": "YulTypedName",
														"src": "4927:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:6",
														"nodeType": "YulTypedName",
														"src": "4939:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:6",
														"nodeType": "YulTypedName",
														"src": "4950:4:6",
														"type": ""
													}
												],
												"src": "4861:214:6"
											},
											{
												"body": {
													"nativeSrc": "5147:263:6",
													"nodeType": "YulBlock",
													"src": "5147:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:6",
																"nodeType": "YulBlock",
																"src": "5193:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:6"
																			},
																			"nativeSrc": "5195:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:6"
																		},
																		"nativeSrc": "5195:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:6"
																		},
																		"nativeSrc": "5164:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:6"
																},
																"nativeSrc": "5160:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:6"
															},
															"nativeSrc": "5157:119:6",
															"nodeType": "YulIf",
															"src": "5157:119:6"
														},
														{
															"nativeSrc": "5286:117:6",
															"nodeType": "YulBlock",
															"src": "5286:117:6",
															"statements": [
																{
																	"nativeSrc": "5301:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:6"
																				},
																				"nativeSrc": "5361:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:6"
																		},
																		"nativeSrc": "5340:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:6",
														"nodeType": "YulTypedName",
														"src": "5117:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:6",
														"nodeType": "YulTypedName",
														"src": "5128:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:6",
														"nodeType": "YulTypedName",
														"src": "5140:6:6",
														"type": ""
													}
												],
												"src": "5081:329:6"
											},
											{
												"body": {
													"nativeSrc": "5481:53:6",
													"nodeType": "YulBlock",
													"src": "5481:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:6"
																		},
																		"nativeSrc": "5503:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:6"
																},
																"nativeSrc": "5491:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:6"
															},
															"nativeSrc": "5491:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:6",
														"nodeType": "YulTypedName",
														"src": "5469:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:6",
														"nodeType": "YulTypedName",
														"src": "5476:3:6",
														"type": ""
													}
												],
												"src": "5416:118:6"
											},
											{
												"body": {
													"nativeSrc": "5638:124:6",
													"nodeType": "YulBlock",
													"src": "5638:124:6",
													"statements": [
														{
															"nativeSrc": "5648:26:6",
															"nodeType": "YulAssignment",
															"src": "5648:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:6"
																},
																"nativeSrc": "5656:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:6"
																		},
																		"nativeSrc": "5737:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:6"
																},
																"nativeSrc": "5684:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:6"
															},
															"nativeSrc": "5684:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:6",
														"nodeType": "YulTypedName",
														"src": "5610:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:6",
														"nodeType": "YulTypedName",
														"src": "5622:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:6",
														"nodeType": "YulTypedName",
														"src": "5633:4:6",
														"type": ""
													}
												],
												"src": "5540:222:6"
											},
											{
												"body": {
													"nativeSrc": "5922:288:6",
													"nodeType": "YulBlock",
													"src": "5922:288:6",
													"statements": [
														{
															"nativeSrc": "5932:26:6",
															"nodeType": "YulAssignment",
															"src": "5932:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5944:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5944:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5955:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5955:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5940:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5940:3:6"
																},
																"nativeSrc": "5940:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5940:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5932:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5932:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6012:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6012:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6025:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6025:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6036:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6036:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6021:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6021:3:6"
																		},
																		"nativeSrc": "6021:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6021:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5968:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5968:43:6"
																},
																"nativeSrc": "5968:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5968:71:6"
															},
															"nativeSrc": "5968:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5968:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6093:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6093:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6106:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6106:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6117:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6117:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6102:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6102:3:6"
																		},
																		"nativeSrc": "6102:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6102:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6049:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6049:43:6"
																},
																"nativeSrc": "6049:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6049:72:6"
															},
															"nativeSrc": "6049:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6049:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6175:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6175:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6188:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6188:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6199:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6199:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6184:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6184:3:6"
																		},
																		"nativeSrc": "6184:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6184:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6131:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6131:43:6"
																},
																"nativeSrc": "6131:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6131:72:6"
															},
															"nativeSrc": "6131:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6131:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5768:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5878:9:6",
														"nodeType": "YulTypedName",
														"src": "5878:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5890:6:6",
														"nodeType": "YulTypedName",
														"src": "5890:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5898:6:6",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5906:6:6",
														"nodeType": "YulTypedName",
														"src": "5906:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5917:4:6",
														"nodeType": "YulTypedName",
														"src": "5917:4:6",
														"type": ""
													}
												],
												"src": "5768:442:6"
											},
											{
												"body": {
													"nativeSrc": "6299:391:6",
													"nodeType": "YulBlock",
													"src": "6299:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6345:83:6",
																"nodeType": "YulBlock",
																"src": "6345:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6347:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6347:77:6"
																			},
																			"nativeSrc": "6347:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6347:79:6"
																		},
																		"nativeSrc": "6347:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6347:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6320:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6320:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6329:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6329:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6316:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6316:3:6"
																		},
																		"nativeSrc": "6316:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6316:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6341:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6341:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6312:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6312:3:6"
																},
																"nativeSrc": "6312:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6312:32:6"
															},
															"nativeSrc": "6309:119:6",
															"nodeType": "YulIf",
															"src": "6309:119:6"
														},
														{
															"nativeSrc": "6438:117:6",
															"nodeType": "YulBlock",
															"src": "6438:117:6",
															"statements": [
																{
																	"nativeSrc": "6453:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6453:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6467:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6467:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6457:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6457:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6482:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6482:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6517:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6517:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6528:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6528:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6513:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6513:3:6"
																				},
																				"nativeSrc": "6513:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6513:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6537:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6537:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6492:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6492:20:6"
																		},
																		"nativeSrc": "6492:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6492:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6482:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6482:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6565:118:6",
															"nodeType": "YulBlock",
															"src": "6565:118:6",
															"statements": [
																{
																	"nativeSrc": "6580:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6580:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6594:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6584:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6584:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6610:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6610:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6645:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6645:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6656:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6656:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6641:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6641:3:6"
																				},
																				"nativeSrc": "6641:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6641:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6665:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6665:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6620:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6620:20:6"
																		},
																		"nativeSrc": "6620:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6610:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6610:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6216:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6261:9:6",
														"nodeType": "YulTypedName",
														"src": "6261:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6272:7:6",
														"nodeType": "YulTypedName",
														"src": "6272:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6284:6:6",
														"nodeType": "YulTypedName",
														"src": "6284:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6292:6:6",
														"nodeType": "YulTypedName",
														"src": "6292:6:6",
														"type": ""
													}
												],
												"src": "6216:474:6"
											},
											{
												"body": {
													"nativeSrc": "6724:152:6",
													"nodeType": "YulBlock",
													"src": "6724:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6741:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6741:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6744:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6744:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6734:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6734:6:6"
																},
																"nativeSrc": "6734:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6734:88:6"
															},
															"nativeSrc": "6734:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6734:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6838:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6838:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6841:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6841:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6831:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6831:6:6"
																},
																"nativeSrc": "6831:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6831:15:6"
															},
															"nativeSrc": "6831:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6831:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6862:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6862:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6865:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6865:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6855:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6855:6:6"
																},
																"nativeSrc": "6855:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6855:15:6"
															},
															"nativeSrc": "6855:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6855:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6696:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6696:180:6"
											},
											{
												"body": {
													"nativeSrc": "6933:269:6",
													"nodeType": "YulBlock",
													"src": "6933:269:6",
													"statements": [
														{
															"nativeSrc": "6943:22:6",
															"nodeType": "YulAssignment",
															"src": "6943:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6957:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6957:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6963:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6963:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6953:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:6"
																},
																"nativeSrc": "6953:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6953:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6943:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6943:6:6"
																}
															]
														},
														{
															"nativeSrc": "6974:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6974:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7004:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7004:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7010:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7010:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7000:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7000:3:6"
																},
																"nativeSrc": "7000:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7000:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6978:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6978:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7051:51:6",
																"nodeType": "YulBlock",
																"src": "7051:51:6",
																"statements": [
																	{
																		"nativeSrc": "7065:27:6",
																		"nodeType": "YulAssignment",
																		"src": "7065:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7079:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7079:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7087:4:6",
																					"nodeType": "YulLiteral",
																					"src": "7087:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7075:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7075:3:6"
																			},
																			"nativeSrc": "7075:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7075:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7065:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7065:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7031:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7031:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7024:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7024:6:6"
																},
																"nativeSrc": "7024:26:6",
																"nodeType": "YulFunctionCall",
																"src": "7024:26:6"
															},
															"nativeSrc": "7021:81:6",
															"nodeType": "YulIf",
															"src": "7021:81:6"
														},
														{
															"body": {
																"nativeSrc": "7154:42:6",
																"nodeType": "YulBlock",
																"src": "7154:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7168:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7168:16:6"
																			},
																			"nativeSrc": "7168:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7168:18:6"
																		},
																		"nativeSrc": "7168:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7168:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7118:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7118:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7141:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7141:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7149:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7149:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7138:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7138:2:6"
																		},
																		"nativeSrc": "7138:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7138:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7115:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7115:2:6"
																},
																"nativeSrc": "7115:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7115:38:6"
															},
															"nativeSrc": "7112:84:6",
															"nodeType": "YulIf",
															"src": "7112:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6882:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6917:4:6",
														"nodeType": "YulTypedName",
														"src": "6917:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6926:6:6",
														"nodeType": "YulTypedName",
														"src": "6926:6:6",
														"type": ""
													}
												],
												"src": "6882:320:6"
											},
											{
												"body": {
													"nativeSrc": "7314:68:6",
													"nodeType": "YulBlock",
													"src": "7314:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7336:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7336:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7344:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7344:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:6"
																		},
																		"nativeSrc": "7332:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7332:14:6"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768207374616b656420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "7348:26:6",
																		"nodeType": "YulLiteral",
																		"src": "7348:26:6",
																		"type": "",
																		"value": "Not enough staked tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7325:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7325:6:6"
																},
																"nativeSrc": "7325:50:6",
																"nodeType": "YulFunctionCall",
																"src": "7325:50:6"
															},
															"nativeSrc": "7325:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "7325:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57",
												"nativeSrc": "7208:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7306:6:6",
														"nodeType": "YulTypedName",
														"src": "7306:6:6",
														"type": ""
													}
												],
												"src": "7208:174:6"
											},
											{
												"body": {
													"nativeSrc": "7534:220:6",
													"nodeType": "YulBlock",
													"src": "7534:220:6",
													"statements": [
														{
															"nativeSrc": "7544:74:6",
															"nodeType": "YulAssignment",
															"src": "7544:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7610:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7610:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7615:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7615:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7551:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7551:58:6"
																},
																"nativeSrc": "7551:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7551:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7544:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7544:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7716:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7716:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57",
																	"nativeSrc": "7627:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7627:88:6"
																},
																"nativeSrc": "7627:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7627:93:6"
															},
															"nativeSrc": "7627:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7627:93:6"
														},
														{
															"nativeSrc": "7729:19:6",
															"nodeType": "YulAssignment",
															"src": "7729:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7740:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7740:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7745:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7745:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7736:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7736:3:6"
																},
																"nativeSrc": "7736:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7736:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7729:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7388:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7522:3:6",
														"nodeType": "YulTypedName",
														"src": "7522:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7530:3:6",
														"nodeType": "YulTypedName",
														"src": "7530:3:6",
														"type": ""
													}
												],
												"src": "7388:366:6"
											},
											{
												"body": {
													"nativeSrc": "7931:248:6",
													"nodeType": "YulBlock",
													"src": "7931:248:6",
													"statements": [
														{
															"nativeSrc": "7941:26:6",
															"nodeType": "YulAssignment",
															"src": "7941:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7953:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7953:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7949:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7949:3:6"
																},
																"nativeSrc": "7949:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7949:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7941:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7941:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7988:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7988:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7999:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7999:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7984:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:6"
																		},
																		"nativeSrc": "7984:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7984:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8007:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8007:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8013:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8013:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8003:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8003:3:6"
																		},
																		"nativeSrc": "8003:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8003:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7977:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7977:6:6"
																},
																"nativeSrc": "7977:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7977:47:6"
															},
															"nativeSrc": "7977:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7977:47:6"
														},
														{
															"nativeSrc": "8033:139:6",
															"nodeType": "YulAssignment",
															"src": "8033:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8167:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8167:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8041:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8041:124:6"
																},
																"nativeSrc": "8041:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8041:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8033:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8033:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7760:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7911:9:6",
														"nodeType": "YulTypedName",
														"src": "7911:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7926:4:6",
														"nodeType": "YulTypedName",
														"src": "7926:4:6",
														"type": ""
													}
												],
												"src": "7760:419:6"
											},
											{
												"body": {
													"nativeSrc": "8213:152:6",
													"nodeType": "YulBlock",
													"src": "8213:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8230:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8230:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8233:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8223:6:6"
																},
																"nativeSrc": "8223:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8223:88:6"
															},
															"nativeSrc": "8223:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8223:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8327:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8327:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8330:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8330:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8320:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:6"
																},
																"nativeSrc": "8320:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8320:15:6"
															},
															"nativeSrc": "8320:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8320:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8351:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8351:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8354:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8354:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8344:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8344:6:6"
																},
																"nativeSrc": "8344:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8344:15:6"
															},
															"nativeSrc": "8344:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8344:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8185:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8185:180:6"
											},
											{
												"body": {
													"nativeSrc": "8416:149:6",
													"nodeType": "YulBlock",
													"src": "8416:149:6",
													"statements": [
														{
															"nativeSrc": "8426:25:6",
															"nodeType": "YulAssignment",
															"src": "8426:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8449:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8449:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8431:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8431:17:6"
																},
																"nativeSrc": "8431:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8431:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8426:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8426:1:6"
																}
															]
														},
														{
															"nativeSrc": "8460:25:6",
															"nodeType": "YulAssignment",
															"src": "8460:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8483:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8483:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8465:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8465:17:6"
																},
																"nativeSrc": "8465:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8465:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8460:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8460:1:6"
																}
															]
														},
														{
															"nativeSrc": "8494:17:6",
															"nodeType": "YulAssignment",
															"src": "8494:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8506:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8506:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8509:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8509:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:6"
																},
																"nativeSrc": "8502:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8502:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8494:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8494:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8536:22:6",
																"nodeType": "YulBlock",
																"src": "8536:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8538:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8538:16:6"
																			},
																			"nativeSrc": "8538:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8538:18:6"
																		},
																		"nativeSrc": "8538:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8538:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8527:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8527:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8533:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8533:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8524:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8524:2:6"
																},
																"nativeSrc": "8524:11:6",
																"nodeType": "YulFunctionCall",
																"src": "8524:11:6"
															},
															"nativeSrc": "8521:37:6",
															"nodeType": "YulIf",
															"src": "8521:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8371:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8402:1:6",
														"nodeType": "YulTypedName",
														"src": "8402:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8405:1:6",
														"nodeType": "YulTypedName",
														"src": "8405:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8411:4:6",
														"nodeType": "YulTypedName",
														"src": "8411:4:6",
														"type": ""
													}
												],
												"src": "8371:194:6"
											},
											{
												"body": {
													"nativeSrc": "8619:362:6",
													"nodeType": "YulBlock",
													"src": "8619:362:6",
													"statements": [
														{
															"nativeSrc": "8629:25:6",
															"nodeType": "YulAssignment",
															"src": "8629:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8652:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8652:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8634:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8634:17:6"
																},
																"nativeSrc": "8634:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8634:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8629:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8629:1:6"
																}
															]
														},
														{
															"nativeSrc": "8663:25:6",
															"nodeType": "YulAssignment",
															"src": "8663:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8686:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8686:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8668:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8668:17:6"
																},
																"nativeSrc": "8668:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8668:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8663:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8663:1:6"
																}
															]
														},
														{
															"nativeSrc": "8697:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8697:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8720:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8720:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8723:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8723:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8716:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:6"
																},
																"nativeSrc": "8716:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8716:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8701:11:6",
																	"nodeType": "YulTypedName",
																	"src": "8701:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8734:41:6",
															"nodeType": "YulAssignment",
															"src": "8734:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8763:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "8763:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8745:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8745:17:6"
																},
																"nativeSrc": "8745:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8745:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8734:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8734:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8952:22:6",
																"nodeType": "YulBlock",
																"src": "8952:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8954:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8954:16:6"
																			},
																			"nativeSrc": "8954:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8954:18:6"
																		},
																		"nativeSrc": "8954:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8954:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8885:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8885:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8878:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8878:6:6"
																				},
																				"nativeSrc": "8878:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8878:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8908:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8908:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8915:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "8915:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8924:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "8924:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8911:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8911:3:6"
																						},
																						"nativeSrc": "8911:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8911:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8905:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8905:2:6"
																				},
																				"nativeSrc": "8905:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8905:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8858:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8858:2:6"
																		},
																		"nativeSrc": "8858:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8858:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8838:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8838:6:6"
																},
																"nativeSrc": "8838:113:6",
																"nodeType": "YulFunctionCall",
																"src": "8838:113:6"
															},
															"nativeSrc": "8835:139:6",
															"nodeType": "YulIf",
															"src": "8835:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8571:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8602:1:6",
														"nodeType": "YulTypedName",
														"src": "8602:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8605:1:6",
														"nodeType": "YulTypedName",
														"src": "8605:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8611:7:6",
														"nodeType": "YulTypedName",
														"src": "8611:7:6",
														"type": ""
													}
												],
												"src": "8571:410:6"
											},
											{
												"body": {
													"nativeSrc": "9093:56:6",
													"nodeType": "YulBlock",
													"src": "9093:56:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9115:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9115:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9123:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9123:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9111:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9111:3:6"
																		},
																		"nativeSrc": "9111:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9111:14:6"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722121",
																		"kind": "string",
																		"nativeSrc": "9127:14:6",
																		"nodeType": "YulLiteral",
																		"src": "9127:14:6",
																		"type": "",
																		"value": "Only owner!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9104:6:6"
																},
																"nativeSrc": "9104:38:6",
																"nodeType": "YulFunctionCall",
																"src": "9104:38:6"
															},
															"nativeSrc": "9104:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "9104:38:6"
														}
													]
												},
												"name": "store_literal_in_memory_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61",
												"nativeSrc": "8987:162:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9085:6:6",
														"nodeType": "YulTypedName",
														"src": "9085:6:6",
														"type": ""
													}
												],
												"src": "8987:162:6"
											},
											{
												"body": {
													"nativeSrc": "9301:220:6",
													"nodeType": "YulBlock",
													"src": "9301:220:6",
													"statements": [
														{
															"nativeSrc": "9311:74:6",
															"nodeType": "YulAssignment",
															"src": "9311:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9377:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9377:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9382:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9382:2:6",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9318:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9318:58:6"
																},
																"nativeSrc": "9318:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9318:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9311:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9311:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9483:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9483:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61",
																	"nativeSrc": "9394:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9394:88:6"
																},
																"nativeSrc": "9394:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9394:93:6"
															},
															"nativeSrc": "9394:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9394:93:6"
														},
														{
															"nativeSrc": "9496:19:6",
															"nodeType": "YulAssignment",
															"src": "9496:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9507:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9507:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9512:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9512:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9503:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9503:3:6"
																},
																"nativeSrc": "9503:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9503:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9496:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9496:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9155:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9289:3:6",
														"nodeType": "YulTypedName",
														"src": "9289:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9297:3:6",
														"nodeType": "YulTypedName",
														"src": "9297:3:6",
														"type": ""
													}
												],
												"src": "9155:366:6"
											},
											{
												"body": {
													"nativeSrc": "9698:248:6",
													"nodeType": "YulBlock",
													"src": "9698:248:6",
													"statements": [
														{
															"nativeSrc": "9708:26:6",
															"nodeType": "YulAssignment",
															"src": "9708:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9720:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9720:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9731:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9731:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9716:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:6"
																},
																"nativeSrc": "9716:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9716:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9708:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9708:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9755:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9755:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9766:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9766:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9751:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9751:3:6"
																		},
																		"nativeSrc": "9751:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9751:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9774:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9774:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9780:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9780:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9770:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9770:3:6"
																		},
																		"nativeSrc": "9770:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9770:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9744:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9744:6:6"
																},
																"nativeSrc": "9744:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9744:47:6"
															},
															"nativeSrc": "9744:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9744:47:6"
														},
														{
															"nativeSrc": "9800:139:6",
															"nodeType": "YulAssignment",
															"src": "9800:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9934:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9934:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9808:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9808:124:6"
																},
																"nativeSrc": "9808:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9808:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9800:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9800:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9527:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9678:9:6",
														"nodeType": "YulTypedName",
														"src": "9678:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9693:4:6",
														"nodeType": "YulTypedName",
														"src": "9693:4:6",
														"type": ""
													}
												],
												"src": "9527:419:6"
											},
											{
												"body": {
													"nativeSrc": "10058:68:6",
													"nodeType": "YulBlock",
													"src": "10058:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10080:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10080:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10088:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10088:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10076:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10076:3:6"
																		},
																		"nativeSrc": "10076:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10076:14:6"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65207a65726f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "10092:26:6",
																		"nodeType": "YulLiteral",
																		"src": "10092:26:6",
																		"type": "",
																		"value": "Cannot stake zero tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10069:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10069:6:6"
																},
																"nativeSrc": "10069:50:6",
																"nodeType": "YulFunctionCall",
																"src": "10069:50:6"
															},
															"nativeSrc": "10069:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "10069:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
												"nativeSrc": "9952:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10050:6:6",
														"nodeType": "YulTypedName",
														"src": "10050:6:6",
														"type": ""
													}
												],
												"src": "9952:174:6"
											},
											{
												"body": {
													"nativeSrc": "10278:220:6",
													"nodeType": "YulBlock",
													"src": "10278:220:6",
													"statements": [
														{
															"nativeSrc": "10288:74:6",
															"nodeType": "YulAssignment",
															"src": "10288:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10354:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10354:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10359:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10359:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10295:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10295:58:6"
																},
																"nativeSrc": "10295:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10295:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10288:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10288:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10460:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10460:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
																	"nativeSrc": "10371:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10371:88:6"
																},
																"nativeSrc": "10371:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10371:93:6"
															},
															"nativeSrc": "10371:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10371:93:6"
														},
														{
															"nativeSrc": "10473:19:6",
															"nodeType": "YulAssignment",
															"src": "10473:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10484:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10484:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10489:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10489:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10480:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10480:3:6"
																},
																"nativeSrc": "10480:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10480:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10473:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10473:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10132:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10266:3:6",
														"nodeType": "YulTypedName",
														"src": "10266:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10274:3:6",
														"nodeType": "YulTypedName",
														"src": "10274:3:6",
														"type": ""
													}
												],
												"src": "10132:366:6"
											},
											{
												"body": {
													"nativeSrc": "10675:248:6",
													"nodeType": "YulBlock",
													"src": "10675:248:6",
													"statements": [
														{
															"nativeSrc": "10685:26:6",
															"nodeType": "YulAssignment",
															"src": "10685:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10697:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10697:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10708:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10708:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10693:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10693:3:6"
																},
																"nativeSrc": "10693:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10693:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10685:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10685:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10732:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10732:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10743:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10743:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10728:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10728:3:6"
																		},
																		"nativeSrc": "10728:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10728:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10751:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10751:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10757:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10757:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10747:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10747:3:6"
																		},
																		"nativeSrc": "10747:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10747:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10721:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10721:6:6"
																},
																"nativeSrc": "10721:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10721:47:6"
															},
															"nativeSrc": "10721:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10721:47:6"
														},
														{
															"nativeSrc": "10777:139:6",
															"nodeType": "YulAssignment",
															"src": "10777:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10911:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10911:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10785:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10785:124:6"
																},
																"nativeSrc": "10785:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10785:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10777:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10777:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10504:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10655:9:6",
														"nodeType": "YulTypedName",
														"src": "10655:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10670:4:6",
														"nodeType": "YulTypedName",
														"src": "10670:4:6",
														"type": ""
													}
												],
												"src": "10504:419:6"
											},
											{
												"body": {
													"nativeSrc": "10973:147:6",
													"nodeType": "YulBlock",
													"src": "10973:147:6",
													"statements": [
														{
															"nativeSrc": "10983:25:6",
															"nodeType": "YulAssignment",
															"src": "10983:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11006:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11006:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10988:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10988:17:6"
																},
																"nativeSrc": "10988:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10988:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10983:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10983:1:6"
																}
															]
														},
														{
															"nativeSrc": "11017:25:6",
															"nodeType": "YulAssignment",
															"src": "11017:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11040:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11040:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11022:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11022:17:6"
																},
																"nativeSrc": "11022:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11022:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11017:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11017:1:6"
																}
															]
														},
														{
															"nativeSrc": "11051:16:6",
															"nodeType": "YulAssignment",
															"src": "11051:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11062:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11062:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11065:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11065:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11058:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11058:3:6"
																},
																"nativeSrc": "11058:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11058:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11051:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11051:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11091:22:6",
																"nodeType": "YulBlock",
																"src": "11091:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11093:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11093:16:6"
																			},
																			"nativeSrc": "11093:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11093:18:6"
																		},
																		"nativeSrc": "11093:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11093:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11083:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11083:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11086:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11086:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11080:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11080:2:6"
																},
																"nativeSrc": "11080:10:6",
																"nodeType": "YulFunctionCall",
																"src": "11080:10:6"
															},
															"nativeSrc": "11077:36:6",
															"nodeType": "YulIf",
															"src": "11077:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10929:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10960:1:6",
														"nodeType": "YulTypedName",
														"src": "10960:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10963:1:6",
														"nodeType": "YulTypedName",
														"src": "10963:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10969:3:6",
														"nodeType": "YulTypedName",
														"src": "10969:3:6",
														"type": ""
													}
												],
												"src": "10929:191:6"
											},
											{
												"body": {
													"nativeSrc": "11154:152:6",
													"nodeType": "YulBlock",
													"src": "11154:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11171:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11171:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11174:77:6",
																		"nodeType": "YulLiteral",
																		"src": "11174:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11164:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:6"
																},
																"nativeSrc": "11164:88:6",
																"nodeType": "YulFunctionCall",
																"src": "11164:88:6"
															},
															"nativeSrc": "11164:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "11164:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11268:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11268:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11271:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11271:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11261:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11261:6:6"
																},
																"nativeSrc": "11261:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11261:15:6"
															},
															"nativeSrc": "11261:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11261:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11292:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11292:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11295:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11295:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11285:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11285:6:6"
																},
																"nativeSrc": "11285:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11285:15:6"
															},
															"nativeSrc": "11285:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11285:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11126:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "11126:180:6"
											},
											{
												"body": {
													"nativeSrc": "11354:143:6",
													"nodeType": "YulBlock",
													"src": "11354:143:6",
													"statements": [
														{
															"nativeSrc": "11364:25:6",
															"nodeType": "YulAssignment",
															"src": "11364:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11387:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11387:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11369:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11369:17:6"
																},
																"nativeSrc": "11369:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11369:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11364:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11364:1:6"
																}
															]
														},
														{
															"nativeSrc": "11398:25:6",
															"nodeType": "YulAssignment",
															"src": "11398:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11421:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11421:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11403:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11403:17:6"
																},
																"nativeSrc": "11403:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11403:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11398:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11398:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11445:22:6",
																"nodeType": "YulBlock",
																"src": "11445:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11447:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11447:16:6"
																			},
																			"nativeSrc": "11447:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11447:18:6"
																		},
																		"nativeSrc": "11447:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11447:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11442:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11442:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11435:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11435:6:6"
																},
																"nativeSrc": "11435:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11435:9:6"
															},
															"nativeSrc": "11432:35:6",
															"nodeType": "YulIf",
															"src": "11432:35:6"
														},
														{
															"nativeSrc": "11477:14:6",
															"nodeType": "YulAssignment",
															"src": "11477:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11486:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11486:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11489:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11489:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11482:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11482:3:6"
																},
																"nativeSrc": "11482:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11482:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11477:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11477:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11312:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11343:1:6",
														"nodeType": "YulTypedName",
														"src": "11343:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11346:1:6",
														"nodeType": "YulTypedName",
														"src": "11346:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11352:1:6",
														"nodeType": "YulTypedName",
														"src": "11352:1:6",
														"type": ""
													}
												],
												"src": "11312:185:6"
											},
											{
												"body": {
													"nativeSrc": "11657:288:6",
													"nodeType": "YulBlock",
													"src": "11657:288:6",
													"statements": [
														{
															"nativeSrc": "11667:26:6",
															"nodeType": "YulAssignment",
															"src": "11667:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11679:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11679:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11690:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11690:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11675:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11675:3:6"
																},
																"nativeSrc": "11675:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11675:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11667:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11667:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11747:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11747:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11760:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11760:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11771:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11771:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11756:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:6"
																		},
																		"nativeSrc": "11756:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11756:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11703:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11703:43:6"
																},
																"nativeSrc": "11703:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11703:71:6"
															},
															"nativeSrc": "11703:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11703:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11828:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11828:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11841:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11841:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11852:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11852:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11837:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11837:3:6"
																		},
																		"nativeSrc": "11837:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11837:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11784:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11784:43:6"
																},
																"nativeSrc": "11784:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11784:72:6"
															},
															"nativeSrc": "11784:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11784:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11910:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11910:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11923:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11923:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11934:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11934:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11919:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11919:3:6"
																		},
																		"nativeSrc": "11919:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11919:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11866:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11866:43:6"
																},
																"nativeSrc": "11866:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11866:72:6"
															},
															"nativeSrc": "11866:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11866:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11503:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11613:9:6",
														"nodeType": "YulTypedName",
														"src": "11613:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11625:6:6",
														"nodeType": "YulTypedName",
														"src": "11625:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11633:6:6",
														"nodeType": "YulTypedName",
														"src": "11633:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11641:6:6",
														"nodeType": "YulTypedName",
														"src": "11641:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11652:4:6",
														"nodeType": "YulTypedName",
														"src": "11652:4:6",
														"type": ""
													}
												],
												"src": "11503:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough staked tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake zero tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80638da5cb5b11610095578063a694fc3a11610064578063a694fc3a146102b0578063a9059cbb146102cc578063d82e3962146102fc578063dd62ed3e1461032c576100fe565b80638da5cb5b146102265780639168ae721461024457806395d89b41146102765780639e447fc614610294576100fe565b80632e17de78116100d15780632e17de781461019e578063313ce567146101ba57806370a08231146101d85780637b0a47ee14610208576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61035c565b60405161011791906110c7565b60405180910390f35b61013a60048036038101906101359190611178565b6103ec565b60405161014791906111d0565b60405180910390f35b61015861040e565b60405161016591906111f8565b60405180910390f35b61018860048036038101906101839190611211565b610417565b60405161019591906111d0565b60405180910390f35b6101b860048036038101906101b39190611261565b610445565b005b6101c26105d1565b6040516101cf91906112a7565b60405180910390f35b6101f260048036038101906101ed91906112c0565b6105d9565b6040516101ff91906111f8565b60405180910390f35b61021061061e565b60405161021d91906111f8565b60405180910390f35b61022e610624565b60405161023b91906112fa565b60405180910390f35b61025e600480360381019061025991906112c0565b610649565b60405161026d93929190611313565b60405180910390f35b61027e61066f565b60405161028b91906110c7565b60405180910390f35b6102ae60048036038101906102a99190611261565b6106ff565b005b6102ca60048036038101906102c59190611261565b610798565b005b6102e660048036038101906102e19190611178565b610920565b6040516102f391906111d0565b60405180910390f35b610316600480360381019061031191906112c0565b610942565b60405161032391906111f8565b60405180910390f35b61034660048036038101906103419190611348565b6109d3565b60405161035391906111f8565b60405180910390f35b60606003805461036b906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610397906113b3565b80156103e25780601f106103b9576101008083540402835291602001916103e2565b820191905f5260205f20905b8154815290600101906020018083116103c557829003601f168201915b5050505050905090565b5f806103f6610a55565b9050610403818585610a5c565b600191505092915050565b5f600254905090565b5f80610421610a55565b905061042e858285610a6e565b610439858585610b00565b60019150509392505050565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f015410156104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c29061142d565b60405180910390fd5b5f6104d533610942565b90505f811115610538576104e93382610bf0565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161052f91906111f8565b60405180910390a25b82825f015f82825461054a9190611478565b92505081905550600554825f015461056291906114ab565b826001018190555042826002018190555061057e303385610b00565b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75846040516105c491906111f8565b60405180910390a2505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055481565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052805f5260405f205f91509050805f0154908060010154908060020154905083565b60606004805461067e906113b3565b80601f01602080910402602001604051908101604052809291908181526020018280546106aa906113b3565b80156106f55780601f106106cc576101008083540402835291602001916106f5565b820191905f5260205f20905b8154815290600101906020018083116106d857829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611536565b60405180910390fd5b8060058190555050565b5f81116107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d19061159e565b60405180910390fd5b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f61082433610942565b90505f811115610887576108383382610bf0565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161087e91906111f8565b60405180910390a25b610892333085610b00565b82825f015f8282546108a491906115bc565b92505081905550428260020181905550600554825f01546108c591906114ab565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8460405161091391906111f8565b60405180910390a2505050565b5f8061092a610a55565b9050610937818585610b00565b600191505092915050565b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160020154426109949190611478565b90505f670de0b6b3a764000082600554855f01546109b291906114ab565b6109bc91906114ab565b6109c6919061161c565b9050809350505050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610a698383836001610c6f565b505050565b5f610a7984846109d3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610afa5781811015610aeb578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ae29392919061164c565b60405180910390fd5b610af984848484035f610c6f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b70575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b6791906112fa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610be0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bd791906112fa565b60405180910390fd5b610beb838383610e3e565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c60575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c5791906112fa565b60405180910390fd5b610c6b5f8383610e3e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cdf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cd691906112fa565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d4f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d4691906112fa565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e38578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e2f91906111f8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e8e578060025f828254610e8291906115bc565b92505081905550610f5c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f0e9392919061164c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa3578060025f8282540392505081905550610fed565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161104a91906111f8565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61109982611057565b6110a38185611061565b93506110b3818560208601611071565b6110bc8161107f565b840191505092915050565b5f6020820190508181035f8301526110df818461108f565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611114826110eb565b9050919050565b6111248161110a565b811461112e575f80fd5b50565b5f8135905061113f8161111b565b92915050565b5f819050919050565b61115781611145565b8114611161575f80fd5b50565b5f813590506111728161114e565b92915050565b5f806040838503121561118e5761118d6110e7565b5b5f61119b85828601611131565b92505060206111ac85828601611164565b9150509250929050565b5f8115159050919050565b6111ca816111b6565b82525050565b5f6020820190506111e35f8301846111c1565b92915050565b6111f281611145565b82525050565b5f60208201905061120b5f8301846111e9565b92915050565b5f805f60608486031215611228576112276110e7565b5b5f61123586828701611131565b935050602061124686828701611131565b925050604061125786828701611164565b9150509250925092565b5f60208284031215611276576112756110e7565b5b5f61128384828501611164565b91505092915050565b5f60ff82169050919050565b6112a18161128c565b82525050565b5f6020820190506112ba5f830184611298565b92915050565b5f602082840312156112d5576112d46110e7565b5b5f6112e284828501611131565b91505092915050565b6112f48161110a565b82525050565b5f60208201905061130d5f8301846112eb565b92915050565b5f6060820190506113265f8301866111e9565b61133360208301856111e9565b61134060408301846111e9565b949350505050565b5f806040838503121561135e5761135d6110e7565b5b5f61136b85828601611131565b925050602061137c85828601611131565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113ca57607f821691505b6020821081036113dd576113dc611386565b5b50919050565b7f4e6f7420656e6f756768207374616b656420746f6b656e7300000000000000005f82015250565b5f611417601883611061565b9150611422826113e3565b602082019050919050565b5f6020820190508181035f8301526114448161140b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61148282611145565b915061148d83611145565b92508282039050818111156114a5576114a461144b565b5b92915050565b5f6114b582611145565b91506114c083611145565b92508282026114ce81611145565b915082820484148315176114e5576114e461144b565b5b5092915050565b7f4f6e6c79206f776e6572212100000000000000000000000000000000000000005f82015250565b5f611520600c83611061565b915061152b826114ec565b602082019050919050565b5f6020820190508181035f83015261154d81611514565b9050919050565b7f43616e6e6f74207374616b65207a65726f20746f6b656e7300000000000000005f82015250565b5f611588601883611061565b915061159382611554565b602082019050919050565b5f6020820190508181035f8301526115b58161157c565b9050919050565b5f6115c682611145565b91506115d183611145565b92508282019050808211156115e9576115e861144b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61162682611145565b915061163183611145565b925082611641576116406115ef565b5b828204905092915050565b5f60608201905061165f5f8301866112eb565b61166c60208301856111e9565b61167960408301846111e9565b94935050505056fea26469706673582212204e9380e6b77adcc0b3c6ef864f51d289fb0617f4ff4c2dd3e4cf127d3a5ab37764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x294 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x2E17DE78 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x208 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x6FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F6 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH2 0x403 DUP2 DUP6 DUP6 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x421 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH2 0x42E DUP6 DUP3 DUP6 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x439 DUP6 DUP6 DUP6 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4D5 CALLER PUSH2 0x942 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x538 JUMPI PUSH2 0x4E9 CALLER DUP3 PUSH2 0xBF0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x57E ADDRESS CALLER DUP6 PUSH2 0xB00 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x67E SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AA SWAP1 PUSH2 0x13B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP1 PUSH2 0x159E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH2 0x824 CALLER PUSH2 0x942 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x887 JUMPI PUSH2 0x838 CALLER DUP3 PUSH2 0xBF0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x87E SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x892 CALLER ADDRESS DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x92A PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH2 0x937 DUP2 DUP6 DUP6 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x5 SLOAD DUP6 PUSH0 ADD SLOAD PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA69 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA79 DUP5 DUP5 PUSH2 0x9D3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAFA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC6F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB70 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEB DUP4 DUP4 DUP4 PUSH2 0xE3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC60 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC57 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B PUSH0 DUP4 DUP4 PUSH2 0xE3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE38 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE2F SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF5C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFED JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x104A SWAP2 SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1099 DUP3 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0x10A3 DUP2 DUP6 PUSH2 0x1061 JUMP JUMPDEST SWAP4 POP PUSH2 0x10B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x10BC DUP2 PUSH2 0x107F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10DF DUP2 DUP5 PUSH2 0x108F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1114 DUP3 PUSH2 0x10EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP2 EQ PUSH2 0x112E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113F DUP2 PUSH2 0x111B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1157 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP2 EQ PUSH2 0x1161 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1172 DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118E JUMPI PUSH2 0x118D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x119B DUP6 DUP3 DUP7 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11AC DUP6 DUP3 DUP7 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11F2 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x120B PUSH0 DUP4 ADD DUP5 PUSH2 0x11E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1228 JUMPI PUSH2 0x1227 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1235 DUP7 DUP3 DUP8 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1246 DUP7 DUP3 DUP8 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1257 DUP7 DUP3 DUP8 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1276 JUMPI PUSH2 0x1275 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1283 DUP5 DUP3 DUP6 ADD PUSH2 0x1164 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A1 DUP2 PUSH2 0x128C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D4 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F4 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130D PUSH0 DUP4 ADD DUP5 PUSH2 0x12EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1326 PUSH0 DUP4 ADD DUP7 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x1333 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x1340 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136B DUP6 DUP3 DUP7 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x137C DUP6 DUP3 DUP7 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13DD JUMPI PUSH2 0x13DC PUSH2 0x1386 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B656420746F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1417 PUSH1 0x18 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP2 POP PUSH2 0x1422 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1444 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1482 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x148D DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14B5 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C0 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14CE DUP2 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14E5 JUMPI PUSH2 0x14E4 PUSH2 0x144B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E657221210000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1520 PUSH1 0xC DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP2 POP PUSH2 0x152B DUP3 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x154D DUP2 PUSH2 0x1514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65207A65726F20746F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1588 PUSH1 0x18 DUP4 PUSH2 0x1061 JUMP JUMPDEST SWAP2 POP PUSH2 0x1593 DUP3 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15B5 DUP2 PUSH2 0x157C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15C6 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D1 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1626 DUP3 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0x1631 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x15EF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x165F PUSH0 DUP4 ADD DUP7 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0x166C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x1679 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SWAP4 DUP1 0xE6 0xB7 PUSH27 0xDCC0B3C6EF864F51D289FB0617F4FF4C2DD3E4CF127D3A5AB37764 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "114:3123:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1894:828:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;195:29:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;230:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2276:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3139:96:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1033:803;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2728:357:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1894:828:5:-;1946:21;1970:7;:19;1978:10;1970:19;;;;;;;;;;;;;;;1946:43;;2030:6;2007;:19;;;:29;;1999:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2140:21;2164:27;2180:10;2164:15;:27::i;:::-;2140:51;;2221:1;2205:13;:17;2201:177;;;2238:32;2244:10;2256:13;2238:5;:32::i;:::-;2341:10;2327:40;;;2353:13;2327:40;;;;;;:::i;:::-;;;;;;;;2201:177;2442:6;2419;:19;;;:29;;;;;;;:::i;:::-;;;;;;;;2500:10;;2478:6;:19;;;:32;;;;:::i;:::-;2458:6;:17;;:52;;;;2544:15;2520:6;:21;;:39;;;;2627:44;2645:4;2652:10;2664:6;2627:9;:44::i;:::-;2696:10;2687:28;;;2708:6;2687:28;;;;;;:::i;:::-;;;;;;;;1936:786;;1894:828;:::o;3002:82:1:-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;195:29:5:-;;;;:::o;230:20::-;;;;;;;;;;;;;:::o;414:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3139:96:5:-;950:10;941:19;;:5;;;;;;;;;;;:19;;;933:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3221:7:::1;3208:10;:20;;;;3139:96:::0;:::o;1033:803::-;1100:1;1091:6;:10;1083:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1141:21;1165:7;:19;1173:10;1165:19;;;;;;;;;;;;;;;1141:43;;1262:21;1286:27;1302:10;1286:15;:27::i;:::-;1262:51;;1343:1;1327:13;:17;1323:177;;;1360:32;1366:10;1378:13;1360:5;:32::i;:::-;1463:10;1449:40;;;1475:13;1449:40;;;;;;:::i;:::-;;;;;;;;1323:177;1561:44;1571:10;1591:4;1598:6;1561:9;:44::i;:::-;1670:6;1647;:19;;;:29;;;;;;;:::i;:::-;;;;;;;;1710:15;1686:6;:21;;:39;;;;1777:10;;1755:6;:19;;;:32;;;;:::i;:::-;1735:6;:17;;:52;;;;1810:10;1803:26;;;1822:6;1803:26;;;;;;:::i;:::-;;;;;;;;1073:763;;1033:803;:::o;3610:178:1:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2728:357:5:-;2821:7;2844:21;2868:7;:22;2876:13;2868:22;;;;;;;;;;;;;;;2844:46;;2900:19;2940:6;:21;;;2922:15;:39;;;;:::i;:::-;2900:61;;2971:14;3051:4;3024:11;3011:10;;2989:6;:19;;;:32;;;;:::i;:::-;:46;;;;:::i;:::-;2988:67;;;;:::i;:::-;2971:84;;3072:6;3065:13;;;;;2728:357;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:442::-;5917:4;5955:2;5944:9;5940:18;5932:26;;5968:71;6036:1;6025:9;6021:17;6012:6;5968:71;:::i;:::-;6049:72;6117:2;6106:9;6102:18;6093:6;6049:72;:::i;:::-;6131;6199:2;6188:9;6184:18;6175:6;6131:72;:::i;:::-;5768:442;;;;;;:::o;6216:474::-;6284:6;6292;6341:2;6329:9;6320:7;6316:23;6312:32;6309:119;;;6347:79;;:::i;:::-;6309:119;6467:1;6492:53;6537:7;6528:6;6517:9;6513:22;6492:53;:::i;:::-;6482:63;;6438:117;6594:2;6620:53;6665:7;6656:6;6645:9;6641:22;6620:53;:::i;:::-;6610:63;;6565:118;6216:474;;;;;:::o;6696:180::-;6744:77;6741:1;6734:88;6841:4;6838:1;6831:15;6865:4;6862:1;6855:15;6882:320;6926:6;6963:1;6957:4;6953:12;6943:22;;7010:1;7004:4;7000:12;7031:18;7021:81;;7087:4;7079:6;7075:17;7065:27;;7021:81;7149:2;7141:6;7138:14;7118:18;7115:38;7112:84;;7168:18;;:::i;:::-;7112:84;6933:269;6882:320;;;:::o;7208:174::-;7348:26;7344:1;7336:6;7332:14;7325:50;7208:174;:::o;7388:366::-;7530:3;7551:67;7615:2;7610:3;7551:67;:::i;:::-;7544:74;;7627:93;7716:3;7627:93;:::i;:::-;7745:2;7740:3;7736:12;7729:19;;7388:366;;;:::o;7760:419::-;7926:4;7964:2;7953:9;7949:18;7941:26;;8013:9;8007:4;8003:20;7999:1;7988:9;7984:17;7977:47;8041:131;8167:4;8041:131;:::i;:::-;8033:139;;7760:419;;;:::o;8185:180::-;8233:77;8230:1;8223:88;8330:4;8327:1;8320:15;8354:4;8351:1;8344:15;8371:194;8411:4;8431:20;8449:1;8431:20;:::i;:::-;8426:25;;8465:20;8483:1;8465:20;:::i;:::-;8460:25;;8509:1;8506;8502:9;8494:17;;8533:1;8527:4;8524:11;8521:37;;;8538:18;;:::i;:::-;8521:37;8371:194;;;;:::o;8571:410::-;8611:7;8634:20;8652:1;8634:20;:::i;:::-;8629:25;;8668:20;8686:1;8668:20;:::i;:::-;8663:25;;8723:1;8720;8716:9;8745:30;8763:11;8745:30;:::i;:::-;8734:41;;8924:1;8915:7;8911:15;8908:1;8905:22;8885:1;8878:9;8858:83;8835:139;;8954:18;;:::i;:::-;8835:139;8619:362;8571:410;;;;:::o;8987:162::-;9127:14;9123:1;9115:6;9111:14;9104:38;8987:162;:::o;9155:366::-;9297:3;9318:67;9382:2;9377:3;9318:67;:::i;:::-;9311:74;;9394:93;9483:3;9394:93;:::i;:::-;9512:2;9507:3;9503:12;9496:19;;9155:366;;;:::o;9527:419::-;9693:4;9731:2;9720:9;9716:18;9708:26;;9780:9;9774:4;9770:20;9766:1;9755:9;9751:17;9744:47;9808:131;9934:4;9808:131;:::i;:::-;9800:139;;9527:419;;;:::o;9952:174::-;10092:26;10088:1;10080:6;10076:14;10069:50;9952:174;:::o;10132:366::-;10274:3;10295:67;10359:2;10354:3;10295:67;:::i;:::-;10288:74;;10371:93;10460:3;10371:93;:::i;:::-;10489:2;10484:3;10480:12;10473:19;;10132:366;;;:::o;10504:419::-;10670:4;10708:2;10697:9;10693:18;10685:26;;10757:9;10751:4;10747:20;10743:1;10732:9;10728:17;10721:47;10785:131;10911:4;10785:131;:::i;:::-;10777:139;;10504:419;;;:::o;10929:191::-;10969:3;10988:20;11006:1;10988:20;:::i;:::-;10983:25;;11022:20;11040:1;11022:20;:::i;:::-;11017:25;;11065:1;11062;11058:9;11051:16;;11086:3;11083:1;11080:10;11077:36;;;11093:18;;:::i;:::-;11077:36;10929:191;;;;:::o;11126:180::-;11174:77;11171:1;11164:88;11271:4;11268:1;11261:15;11295:4;11292:1;11285:15;11312:185;11352:1;11369:20;11387:1;11369:20;:::i;:::-;11364:25;;11403:20;11421:1;11403:20;:::i;:::-;11398:25;;11442:1;11432:35;;11447:18;;:::i;:::-;11432:35;11489:1;11486;11482:9;11477:14;;11312:185;;;;:::o;11503:442::-;11652:4;11690:2;11679:9;11675:18;11667:26;;11703:71;11771:1;11760:9;11756:17;11747:6;11703:71;:::i;:::-;11784:72;11852:2;11841:9;11837:18;11828:6;11784:72;:::i;:::-;11866;11934:2;11923:9;11919:18;11910:6;11866:72;:::i;:::-;11503:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1163000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"calculateReward(address)": "infinite",
								"decimals()": "383",
								"name()": "infinite",
								"owner()": "2531",
								"rewardRate()": "2514",
								"setRewardRate(uint256)": "24773",
								"stake(uint256)": "infinite",
								"stakers(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 3237,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 223,
									"end": 224,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 224,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 195,
									"end": 224,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 865,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 865,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 865,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 640,
									"end": 865,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 640,
									"end": 865,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 640,
									"end": 865,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 640,
									"end": 865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 640,
									"end": 865,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "4B697075436F696E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "4B50430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 794,
									"end": 804,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 786,
									"end": 791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 786,
									"end": 791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 786,
									"end": 804,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 814,
									"end": 858,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 820,
									"end": 825,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 847,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 847,
									"end": 855,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 847,
									"end": 855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 847,
									"end": 855,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 847,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 847,
									"end": 857,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 847,
									"end": 857,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 847,
									"end": 857,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 847,
									"end": 857,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 843,
									"end": 845,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 843,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 843,
									"end": 857,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 843,
									"end": 857,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 843,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 843,
									"end": 857,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 843,
									"end": 857,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 843,
									"end": 857,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 827,
									"end": 840,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 827,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 827,
									"end": 857,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 827,
									"end": 857,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 827,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 827,
									"end": 857,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 827,
									"end": 857,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 827,
									"end": 857,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 814,
									"end": 819,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 814,
									"end": 819,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 814,
									"end": 819,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 814,
									"end": 858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 814,
									"end": 858,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 814,
									"end": 858,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 814,
									"end": 858,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 814,
									"end": 858,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 640,
									"end": 865,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6195,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6243,
									"end": 6320,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6240,
									"end": 6241,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6321,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6340,
									"end": 6344,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6337,
									"end": 6338,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6330,
									"end": 6345,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6364,
									"end": 6368,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6361,
									"end": 6362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6369,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6423,
									"end": 6431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6470,
									"end": 6475,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6467,
									"end": 6468,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6463,
									"end": 6476,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6442,
									"end": 6476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6550,
									"end": 6555,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6557,
									"end": 6561,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6581,
									"end": 6587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6572,
									"end": 6587,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6605,
									"end": 6610,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6596,
									"end": 6610,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6640,
									"end": 6641,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6630,
									"end": 6638,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6627,
									"end": 6642,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6735,
									"end": 6739,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6730,
									"end": 6733,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6726,
									"end": 6740,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 6720,
									"end": 6724,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6717,
									"end": 6741,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6744,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6744,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6714,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6794,
									"end": 6795,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6784,
									"end": 6792,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6780,
									"end": 6796,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7209,
									"end": 7213,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7202,
									"end": 7207,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7198,
									"end": 7214,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7189,
									"end": 7214,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6777,
									"end": 7228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7259,
									"end": 7263,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7253,
									"end": 7257,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7249,
									"end": 7264,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7241,
									"end": 7264,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7312,
									"end": 7320,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7289,
									"end": 7321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7289,
									"end": 7321,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7321,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6619,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6489,
									"end": 7337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7397,
									"end": 7402,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7588,
									"end": 7596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7609,
									"end": 7610,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7600,
									"end": 7610,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7578,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7637,
									"end": 7641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7654,
									"end": 7655,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7645,
									"end": 7655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7656,
									"end": 7661,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7627,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7723,
									"end": 7727,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7807,
									"end": 7808,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7766,
									"end": 7793,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7784,
									"end": 7785,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7802,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7847,
									"end": 7850,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 7837,
									"end": 7845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7834,
									"end": 7851,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7854,
									"end": 7872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7854,
									"end": 7872,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7831,
									"end": 7874,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7903,
									"end": 7911,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7896,
									"end": 7912,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7887,
									"end": 7912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7938,
									"end": 7941,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7931,
									"end": 7936,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7928,
									"end": 7942,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7945,
									"end": 7963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7945,
									"end": 7963,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7925,
									"end": 7965,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7978,
									"end": 7983,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 7993,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8102,
									"end": 8104,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8100,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8089,
									"end": 8105,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8083,
									"end": 8086,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 8077,
									"end": 8081,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8074,
									"end": 8087,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8070,
									"end": 8106,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8052,
									"end": 8054,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 8042,
									"end": 8050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8039,
									"end": 8055,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8034,
									"end": 8036,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 8028,
									"end": 8032,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8025,
									"end": 8037,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8021,
									"end": 8056,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8005,
									"end": 8116,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8158,
									"end": 8166,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8148,
									"end": 8167,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8139,
									"end": 8167,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8193,
									"end": 8196,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8186,
									"end": 8191,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8183,
									"end": 8197,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8200,
									"end": 8218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8200,
									"end": 8218,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8180,
									"end": 8220,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 8233,
									"end": 8238,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8002,
									"end": 8248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8311,
									"end": 8314,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8301,
									"end": 8309,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8295,
									"end": 8299,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8292,
									"end": 8293,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 8273,
									"end": 8315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8273,
									"end": 8315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8347,
									"end": 8351,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8342,
									"end": 8345,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8338,
									"end": 8352,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 8331,
									"end": 8336,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8328,
									"end": 8353,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8356,
									"end": 8374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8325,
									"end": 8376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8405,
									"end": 8409,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8394,
									"end": 8410,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8385,
									"end": 8410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 8416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8457,
									"end": 8464,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8497,
									"end": 8501,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 8490,
									"end": 8495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8486,
									"end": 8502,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8475,
									"end": 8502,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8422,
									"end": 8508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8572,
									"end": 8577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8596,
									"end": 8619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8596,
									"end": 8619,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8588,
									"end": 8619,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8656,
									"end": 8664,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8640,
									"end": 8665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8628,
									"end": 8665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8721,
									"end": 8787,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8711,
									"end": 8719,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8705,
									"end": 8709,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 8684,
									"end": 8788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8684,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8675,
									"end": 8788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8514,
									"end": 8795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8841,
									"end": 8848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8882,
									"end": 8883,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8864,
									"end": 8884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8864,
									"end": 8884,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8859,
									"end": 8884,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8916,
									"end": 8917,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8898,
									"end": 8918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "tag",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8898,
									"end": 8918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8893,
									"end": 8918,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8950,
									"end": 8951,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8946,
									"end": 8955,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 8993,
									"end": 9004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8975,
									"end": 9005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 8975,
									"end": 9005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8964,
									"end": 9005,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9154,
									"end": 9155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9145,
									"end": 9152,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9141,
									"end": 9156,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 9138,
									"end": 9139,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9135,
									"end": 9157,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 9115,
									"end": 9116,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9108,
									"end": 9117,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9088,
									"end": 9171,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 9184,
									"end": 9202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9184,
									"end": 9202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9065,
									"end": 9204,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8849,
									"end": 9211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 9211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9254,
									"end": 9261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9336,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9287,
									"end": 9292,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9283,
									"end": 9337,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9272,
									"end": 9337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9217,
									"end": 9343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9386,
									"end": 9393,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9433,
									"end": 9438,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9415,
									"end": 9439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9415,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9404,
									"end": 9439,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9349,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3237,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e9380e6b77adcc0b3c6ef864f51d289fb0617f4ff4c2dd3e4cf127d3a5ab37764736f6c634300081a0033",
									".code": [
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "D82E3962"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "9168AE72"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "9E447FC6"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "2E17DE78"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "2E17DE78"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "7B0A47EE"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 3237,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1894,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1894,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 195,
											"end": 224,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 195,
											"end": 224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 195,
											"end": 224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 414,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 414,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 414,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3139,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3139,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1033,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1033,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2728,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2728,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2728,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1989,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1999,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1999,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2180,
											"end": 2190,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2164,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2191,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2164,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2222,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2201,
											"end": 2378,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2269,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2238,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2351,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "PUSH",
											"source": 5,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 2353,
											"end": 2366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2327,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2367,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2378,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2201,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2419,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2497,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2478,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2559,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2559,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2645,
											"end": 2649,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2670,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2627,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2671,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2627,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2687,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2715,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 2722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 2722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 195,
											"end": 224,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 195,
											"end": 224,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 195,
											"end": 224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 250,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 230,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 414,
											"end": 455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 950,
											"end": 960,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 941,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 941,
											"end": 960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 941,
											"end": 946,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 946,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 941,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 946,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 946,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 941,
											"end": 946,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 941,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 941,
											"end": 960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 941,
											"end": 960,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 933,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 933,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 933,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3208,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1101,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1083,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1083,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1184,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1286,
											"end": 1313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1344,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1500,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1323,
											"end": 1500,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1366,
											"end": 1376,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1360,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1360,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1473,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "PUSH",
											"source": 5,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1449,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1489,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1500,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1323,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1571,
											"end": 1581,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1561,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1561,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1647,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1725,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1787,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1777,
											"end": 1787,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1755,
											"end": 1787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1755,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1787,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1755,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1787,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1820,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "PUSH",
											"source": 5,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1803,
											"end": 1829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1829,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2961,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2940,
											"end": 2961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2961,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2922,
											"end": 2961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2922,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2961,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2922,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2971,
											"end": 2985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3055,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3024,
											"end": 3035,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3021,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3011,
											"end": 3021,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3008,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3008,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2989,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2989,
											"end": 3035,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2989,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3035,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2989,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2988,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2988,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2971,
											"end": 3055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2971,
											"end": 3055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3078,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 3085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5917,
											"end": 5921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5957,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5944,
											"end": 5953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 6036,
											"end": 6037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6018,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5968,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6039,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5968,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 6117,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6115,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6099,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6049,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6199,
											"end": 6201,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6188,
											"end": 6197,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6181,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6131,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6203,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6131,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6298,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6329,
											"end": 6338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6339,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6344,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6347,
											"end": 6426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6347,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6309,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6537,
											"end": 6544,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6492,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6492,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6594,
											"end": 6596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 6665,
											"end": 6672,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6654,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6620,
											"end": 6673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 6620,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6673,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6876,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6696,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6744,
											"end": 6821,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6741,
											"end": 6742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6845,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6838,
											"end": 6839,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6862,
											"end": 6863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6855,
											"end": 6870,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 6965,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7000,
											"end": 7012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7079,
											"end": 7085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7021,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7151,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7152,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7153,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7168,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 7112,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6933,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7382,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7208,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420656E6F756768207374616B656420746F6B656E730000000000000000"
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7332,
											"end": 7346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7325,
											"end": 7375,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7754,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7388,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 7615,
											"end": 7617,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 7610,
											"end": 7613,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7551,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7551,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7551,
											"end": 7618,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 7551,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7716,
											"end": 7719,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 7627,
											"end": 7720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7720,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7627,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7747,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7740,
											"end": 7743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 7748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 8179,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 7760,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7964,
											"end": 7966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8013,
											"end": 8022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 7997,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7977,
											"end": 8024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 8167,
											"end": 8171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 8041,
											"end": 8172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8172,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 8041,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 8179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 8179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 8179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 8179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8365,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 8185,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8233,
											"end": 8310,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8334,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8320,
											"end": 8335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8354,
											"end": 8358,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8351,
											"end": 8352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8359,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8565,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 8371,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8431,
											"end": 8451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8451,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8431,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8483,
											"end": 8484,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8465,
											"end": 8485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8485,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8511,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8494,
											"end": 8511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8494,
											"end": 8511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8527,
											"end": 8531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8535,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8558,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8521,
											"end": 8558,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 8538,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8558,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8521,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8981,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 8571,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 8652,
											"end": 8653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8634,
											"end": 8654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8686,
											"end": 8687,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8668,
											"end": 8688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8688,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8668,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8688,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8723,
											"end": 8724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8716,
											"end": 8725,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8745,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8763,
											"end": 8774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8745,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8745,
											"end": 8775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8745,
											"end": 8775,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8745,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8734,
											"end": 8775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8915,
											"end": 8922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 8926,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8909,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 8927,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8885,
											"end": 8886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8887,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8941,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8835,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8835,
											"end": 8974,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 8954,
											"end": 8972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8835,
											"end": 8974,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8835,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8981,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8981,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8987,
											"end": 9149,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 8987,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9127,
											"end": 9141,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206F776E657221210000000000000000000000000000000000000000"
										},
										{
											"begin": 9123,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9111,
											"end": 9125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9104,
											"end": 9142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8987,
											"end": 9149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8987,
											"end": 9149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9521,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 9155,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9382,
											"end": 9384,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 9377,
											"end": 9380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9318,
											"end": 9385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9385,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9318,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9394,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9483,
											"end": 9486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9394,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 9394,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9394,
											"end": 9487,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9394,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9512,
											"end": 9514,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9507,
											"end": 9510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9155,
											"end": 9521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9946,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 9527,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9693,
											"end": 9697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9708,
											"end": 9734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9770,
											"end": 9790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9766,
											"end": 9767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9755,
											"end": 9764,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9751,
											"end": 9768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9744,
											"end": 9791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 9808,
											"end": 9939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9939,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 9808,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 10126,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9952,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10118,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F74207374616B65207A65726F20746F6B656E730000000000000000"
										},
										{
											"begin": 10088,
											"end": 10089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10080,
											"end": 10086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10076,
											"end": 10090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 10126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 10126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10498,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10132,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10274,
											"end": 10277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10359,
											"end": 10361,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 10354,
											"end": 10357,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10295,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10295,
											"end": 10362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10295,
											"end": 10362,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10295,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10460,
											"end": 10463,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 10371,
											"end": 10464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10464,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10371,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10489,
											"end": 10491,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10484,
											"end": 10487,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10473,
											"end": 10492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10473,
											"end": 10492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10132,
											"end": 10498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10923,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 10504,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10708,
											"end": 10710,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10697,
											"end": 10706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10685,
											"end": 10711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10685,
											"end": 10711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10757,
											"end": 10766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10767,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10743,
											"end": 10744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10728,
											"end": 10745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10721,
											"end": 10768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10785,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10911,
											"end": 10915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10785,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10785,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10785,
											"end": 10916,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10785,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 11120,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10929,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 10972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10988,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 11006,
											"end": 11007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10988,
											"end": 11008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 11008,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 10988,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10983,
											"end": 11008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10983,
											"end": 11008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 11040,
											"end": 11041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11022,
											"end": 11042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 11022,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11042,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11051,
											"end": 11067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11051,
											"end": 11067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11080,
											"end": 11090,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11077,
											"end": 11113,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11077,
											"end": 11113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 11077,
											"end": 11113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11093,
											"end": 11111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 11093,
											"end": 11111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11093,
											"end": 11111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11093,
											"end": 11111,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 11093,
											"end": 11111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11077,
											"end": 11113,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 11077,
											"end": 11113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 11120,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 11120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 11120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 11120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 11120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11126,
											"end": 11306,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11126,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11174,
											"end": 11251,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11171,
											"end": 11172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11271,
											"end": 11275,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11268,
											"end": 11269,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11261,
											"end": 11276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11299,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11285,
											"end": 11300,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11497,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11312,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11352,
											"end": 11353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11369,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11387,
											"end": 11388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11369,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11369,
											"end": 11389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11369,
											"end": 11389,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11369,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11403,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11421,
											"end": 11422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11403,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11403,
											"end": 11423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11403,
											"end": 11423,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11403,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11423,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11442,
											"end": 11443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11432,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11432,
											"end": 11467,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11447,
											"end": 11465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11432,
											"end": 11467,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11432,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11489,
											"end": 11490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11486,
											"end": 11487,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11491,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11497,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11652,
											"end": 11656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11690,
											"end": 11692,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11679,
											"end": 11688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11675,
											"end": 11693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11667,
											"end": 11693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11667,
											"end": 11693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11703,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11769,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11747,
											"end": 11753,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11703,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 11703,
											"end": 11774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11703,
											"end": 11774,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11703,
											"end": 11774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11784,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11852,
											"end": 11854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11841,
											"end": 11850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11837,
											"end": 11855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 11834,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11784,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 11784,
											"end": 11856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11784,
											"end": 11856,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11784,
											"end": 11856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11866,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 11934,
											"end": 11936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11923,
											"end": 11932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 11937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11910,
											"end": 11916,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11866,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 11866,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11866,
											"end": 11938,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 11866,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11503,
											"end": 11945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"main.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"calculateReward(address)": "d82e3962",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"rewardRate()": "7b0a47ee",
							"setRewardRate(uint256)": "9e447fc6",
							"stake(uint256)": "a694fc3a",
							"stakers(address)": "9168ae72",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialValue\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"StackContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"main.sol\":{\"keccak256\":\"0xef5caa3602f2337bf56d7ccc3d3efa72e4832085e07ff9e91f168c7d4b0672e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d22bd13336fa5fc6df9bae2dad41476b5f1c67e08065de8dd6e4055db8d6b851\",\"dweb:/ipfs/QmXVCPsHKUNJpQESwQUxc4Axa8BkK4sknh2NoThsjeoKe2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "main.sol:StackContract",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "main.sol:StackContract",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "main.sol:StackContract",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "main.sol:StackContract",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "main.sol:StackContract",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 793,
								"contract": "main.sol:StackContract",
								"label": "rewardRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 795,
								"contract": "main.sol:StackContract",
								"label": "owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 807,
								"contract": "main.sol:StackContract",
								"label": "stakers",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(Staker)802_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Staker)802_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StackContract.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)802_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Staker)802_storage": {
								"encoding": "inplace",
								"label": "struct StackContract.Staker",
								"members": [
									{
										"astId": 797,
										"contract": "main.sol:StackContract",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 799,
										"contract": "main.sol:StackContract",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 801,
										"contract": "main.sol:StackContract",
										"label": "stakeTimestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"main.sol": {
				"ast": {
					"absolutePath": "main.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"StackContract": [
							1079
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 652,
							"src": "57:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"140:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "140:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "140:5:5"
								}
							],
							"canonicalName": "StackContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079,
								651,
								41,
								755,
								729,
								785
							],
							"name": "StackContract",
							"nameLocation": "123:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 793,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "210:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "195:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "195:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 795,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "245:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "230:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 794,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StackContract.Staker",
									"id": 802,
									"members": [
										{
											"constant": false,
											"id": 797,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "329:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 802,
											"src": "321:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 796,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "321:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 799,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "359:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 802,
											"src": "351:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 798,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "351:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 801,
											"mutability": "mutable",
											"name": "stakeTimestamp",
											"nameLocation": "387:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 802,
											"src": "379:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 800,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "379:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "304:6:5",
									"nodeType": "StructDefinition",
									"scope": 1079,
									"src": "297:111:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 807,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "448:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "414:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$802_storage_$",
										"typeString": "mapping(address => struct StackContract.Staker)"
									},
									"typeName": {
										"id": 806,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "422:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "414:26:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$802_storage_$",
											"typeString": "mapping(address => struct StackContract.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 805,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 804,
												"name": "Staker",
												"nameLocations": [
													"433:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "433:6:5"
											},
											"referencedDeclaration": 802,
											"src": "433:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
												"typeString": "struct StackContract.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 813,
									"name": "Staked",
									"nameLocation": "468:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "491:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "475:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "505:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "497:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:38:5"
									},
									"src": "462:51:5"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 819,
									"name": "Unstaked",
									"nameLocation": "524:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "549:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "533:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "563:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "555:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:38:5"
									},
									"src": "518:53:5"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 825,
									"name": "RewardClaimed",
									"nameLocation": "582:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "612:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "596:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "626:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "618:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:38:5"
									},
									"src": "576:58:5"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "700:165:5",
										"statements": [
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 834,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "786:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 835,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "794:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "798:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "794:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "786:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "786:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "820:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "_initialValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "827:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 843,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "847:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "847:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "843:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "827:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "814:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "814:44:5"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4b697075436f696e",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "681:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e12c323341522906e41b0b56ac28da924ff7f22681d64a9766bf520c74e0e9de",
														"typeString": "literal_string \"KipuCoin\""
													},
													"value": "KipuCoin"
												},
												{
													"hexValue": "4b5043",
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "693:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7f86c9c154d14ddaef8b619648ca391d4c4f53c8526a4b97a5e2375cfcee29fe",
														"typeString": "literal_string \"KPC\""
													},
													"value": "KPC"
												}
											],
											"id": 832,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 829,
												"name": "ERC20",
												"nameLocations": [
													"675:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "675:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "675:24:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "_initialValue",
												"nameLocation": "660:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "652:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:23:5"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "700:0:5"
									},
									"scope": 1079,
									"src": "640:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "923:72:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "941:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 854,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "950:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "954:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "950:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "941:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722121",
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "962:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61",
																"typeString": "literal_string \"Only owner!!\""
															},
															"value": "Only owner!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b6dfbd606df34160c886ebd777ca9a3abfc5671e38b12456e771f76772bbfb61",
																"typeString": "literal_string \"Only owner!!\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "933:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "933:44:5"
											},
											{
												"id": 860,
												"nodeType": "PlaceholderStatement",
												"src": "987:1:5"
											}
										]
									},
									"id": 862,
									"name": "onlyOwner",
									"nameLocation": "911:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "920:2:5"
									},
									"src": "902:93:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "1073:763:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "1091:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1091:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65207a65726f20746f6b656e73",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1103:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
																"typeString": "literal_string \"Cannot stake zero tokens\""
															},
															"value": "Cannot stake zero tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a02f11666a200f30cecba397f7530127901a514068b6cce650d5e1b666a5e24",
																"typeString": "literal_string \"Cannot stake zero tokens\""
															}
														],
														"id": 867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1083:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1083:47:5"
											},
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "1156:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "1141:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
															"typeString": "struct StackContract.Staker"
														},
														"typeName": {
															"id": 875,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 874,
																"name": "Staker",
																"nameLocations": [
																	"1141:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 802,
																"src": "1141:6:5"
															},
															"referencedDeclaration": 802,
															"src": "1141:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"baseExpression": {
														"id": 877,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1165:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$802_storage_$",
															"typeString": "mapping(address => struct StackContract.Staker storage ref)"
														}
													},
													"id": 880,
													"indexExpression": {
														"expression": {
															"id": 878,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1173:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1177:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1173:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1165:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$802_storage",
														"typeString": "struct StackContract.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1141:43:5"
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "pendingReward",
														"nameLocation": "1270:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "1262:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1262:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 885,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1302:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1306:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1302:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 884,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "1286:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1262:51:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "1327:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1343:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1327:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 905,
												"nodeType": "IfStatement",
												"src": "1323:177:5",
												"trueBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "1346:154:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 893,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1366:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1370:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1366:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 895,
																		"name": "pendingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "1378:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 892,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "1360:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1360:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "1360:32:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 899,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1463:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1467:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1463:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 901,
																		"name": "pendingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "1475:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 898,
																	"name": "RewardClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "1449:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1449:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "EmitStatement",
															"src": "1444:45:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 907,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1571:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1575:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1571:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 911,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1591:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StackContract_$1079",
																		"typeString": "contract StackContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StackContract_$1079",
																		"typeString": "contract StackContract"
																	}
																],
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1583:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 909,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1583:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1583:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "1598:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 906,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "1561:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1561:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1561:44:5"
											},
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 916,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1647:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker storage pointer"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1654:12:5",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "1647:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 919,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "1670:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1647:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1647:29:5"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 922,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1686:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker storage pointer"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1693:14:5",
														"memberName": "stakeTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "1686:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 925,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1710:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1716:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1710:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1686:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1686:39:5"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 929,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1735:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker storage pointer"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1742:10:5",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 799,
														"src": "1735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 932,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "1755:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																	"typeString": "struct StackContract.Staker storage pointer"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1762:12:5",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 797,
															"src": "1755:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 934,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1777:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1755:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1735:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "1735:52:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1810:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1814:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1810:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "1822:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "1803:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1803:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "1798:31:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1042:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1056:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1048:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:16:5"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:5"
									},
									"scope": 1079,
									"src": "1033:803:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1936:786:5",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "1961:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "1946:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
															"typeString": "struct StackContract.Staker"
														},
														"typeName": {
															"id": 951,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 950,
																"name": "Staker",
																"nameLocations": [
																	"1946:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 802,
																"src": "1946:6:5"
															},
															"referencedDeclaration": 802,
															"src": "1946:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"baseExpression": {
														"id": 953,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1970:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$802_storage_$",
															"typeString": "mapping(address => struct StackContract.Staker storage ref)"
														}
													},
													"id": 956,
													"indexExpression": {
														"expression": {
															"id": 954,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1978:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1982:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1978:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1970:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$802_storage",
														"typeString": "struct StackContract.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1946:43:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 959,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "2007:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																		"typeString": "struct StackContract.Staker storage pointer"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2014:12:5",
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 797,
																"src": "2007:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 961,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "2030:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2007:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207374616b656420746f6b656e73",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2038:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57",
																"typeString": "literal_string \"Not enough staked tokens\""
															},
															"value": "Not enough staked tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbd1b2e2b575778225c334c2c87168d0cbadb518749afbe474ffc394e8556b57",
																"typeString": "literal_string \"Not enough staked tokens\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1999:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1999:66:5"
											},
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "pendingReward",
														"nameLocation": "2148:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "2140:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 966,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2140:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 969,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2180:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2184:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2180:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "2164:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2140:51:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 973,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "2205:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2221:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2205:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "2201:177:5",
												"trueBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "2224:154:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 977,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2244:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2248:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2244:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 979,
																		"name": "pendingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "2256:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 976,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "2238:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2238:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 981,
															"nodeType": "ExpressionStatement",
															"src": "2238:32:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 983,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2341:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2345:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2341:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 985,
																		"name": "pendingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "2353:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 982,
																	"name": "RewardClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "2327:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2327:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 987,
															"nodeType": "EmitStatement",
															"src": "2322:45:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 990,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2419:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker storage pointer"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2426:12:5",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "2419:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 993,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "2442:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2419:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "2419:29:5"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 996,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2458:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker storage pointer"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2465:10:5",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 799,
														"src": "2458:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 999,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "2478:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																	"typeString": "struct StackContract.Staker storage pointer"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2485:12:5",
															"memberName": "stakedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 797,
															"src": "2478:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1001,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2500:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2478:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2458:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "2458:52:5"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1005,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2520:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker storage pointer"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2527:14:5",
														"memberName": "stakeTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "2520:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1008,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2544:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2550:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2544:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2520:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "2520:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1015,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2645:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StackContract_$1079",
																		"typeString": "contract StackContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StackContract_$1079",
																		"typeString": "contract StackContract"
																	}
																],
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2637:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1013,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2637:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2637:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1017,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2652:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2656:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2652:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "2664:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1012,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "2627:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "2627:44:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1023,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2696:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2700:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2696:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "2708:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1022,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "2687:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "EmitStatement",
												"src": "2682:33:5"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1903:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1919:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1911:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:16:5"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1936:0:5"
									},
									"scope": 1079,
									"src": "1894:828:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "2834:251:5",
										"statements": [
											{
												"assignments": [
													1038
												],
												"declarations": [
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2859:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "2844:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
															"typeString": "struct StackContract.Staker"
														},
														"typeName": {
															"id": 1037,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1036,
																"name": "Staker",
																"nameLocations": [
																	"2844:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 802,
																"src": "2844:6:5"
															},
															"referencedDeclaration": 802,
															"src": "2844:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"baseExpression": {
														"id": 1039,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "2868:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$802_storage_$",
															"typeString": "mapping(address => struct StackContract.Staker storage ref)"
														}
													},
													"id": 1041,
													"indexExpression": {
														"id": 1040,
														"name": "stakerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "2876:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2868:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$802_storage",
														"typeString": "struct StackContract.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2844:46:5"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "stakingTime",
														"nameLocation": "2908:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "2900:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1045,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2922:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2928:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2922:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1047,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "2940:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																"typeString": "struct StackContract.Staker storage pointer"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2947:14:5",
														"memberName": "stakeTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "2940:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2922:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2900:61:5"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2979:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "2971:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1051,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2971:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1053,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "2989:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$802_storage_ptr",
																				"typeString": "struct StackContract.Staker storage pointer"
																			}
																		},
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2996:12:5",
																		"memberName": "stakedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 797,
																		"src": "2989:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1055,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "3011:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2989:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1057,
																	"name": "stakingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "3024:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2989:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1059,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2988:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3051:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2988:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2971:84:5"
											},
											{
												"expression": {
													"id": 1063,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1052,
													"src": "3072:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1035,
												"id": 1064,
												"nodeType": "Return",
												"src": "3065:13:5"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2737:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "stakerAddress",
												"nameLocation": "2761:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2753:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:23:5"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:9:5"
									},
									"scope": 1079,
									"src": "2728:357:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "3198:37:5",
										"statements": [
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1073,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3208:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1074,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "3221:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3208:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "3208:20:5"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1071,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1070,
												"name": "onlyOwner",
												"nameLocations": [
													"3188:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 862,
												"src": "3188:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3188:9:5"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "3148:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "3170:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3162:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:17:5"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3198:0:5"
									},
									"scope": 1079,
									"src": "3139:96:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1080,
							"src": "114:3123:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								813,
								819,
								825
							]
						}
					],
					"src": "32:3206:5"
				},
				"id": 5
			}
		}
	}
}